{"ast":null,"code":"import { reactive, toRefs } from 'vue';\n\n// ✅ 接收父组件的 `showDrawer`\n\nexport default {\n  __name: 'addProduct',\n  props: {\n    showDrawer: Boolean\n  },\n  emits: ['sync-drawer'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n\n    // ✅ 事件触发器，通知父组件修改 `showDrawer`\n    const emit = __emit;\n\n    // ✅ 让 `formState` 是响应式的\n    const dataSource = reactive({\n      formState: {\n        name: '',\n        price: '',\n        categories: ''\n      }\n    });\n    const {\n      formState\n    } = toRefs(dataSource);\n\n    // ✅ 关闭抽屉时，通知父组件修改 `showDrawer`\n    const afterOpenChange = val => {\n      if (!val) {\n        emit('sync-drawer', false); // 发送 `false`，通知父组件关闭抽屉\n      }\n    };\n    const __returned__ = {\n      props,\n      emit,\n      dataSource,\n      formState,\n      afterOpenChange,\n      reactive,\n      toRefs\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","toRefs","props","__props","emit","__emit","dataSource","formState","name","price","categories","afterOpenChange","val"],"sources":["E:/permisson/demo/src/components/product/addProduct.vue"],"sourcesContent":["<template>\r\n  <a-drawer\r\n    :open=\"showDrawer\"\r\n    title=\"产品添加\"\r\n    placement=\"right\"\r\n    @after-open-change=\"afterOpenChange\"\r\n  >\r\n    <a-form :model=\"formState\" ref=\"formRef\" @finish=\"onFinish\">\r\n      <a-form-item name=\"name\" label=\"产品名称\" :rules=\"[{ required: true, message: '请输入产品名称！' }]\">\r\n        <a-input v-model:value=\"formState.name\" />\r\n      </a-form-item>\r\n      <a-form-item name=\"price\" label=\"价格\" :rules=\"[{ required: true, message: '请输入价格！' }]\">\r\n        <a-input v-model:value=\"formState.price\" />\r\n      </a-form-item>\r\n      <a-form-item name=\"categories\" label=\"类别\">\r\n        <a-radio-group v-model:value=\"formState.categories\">\r\n          <a-radio v-for=\"(item, index) in categoriesList\" :key=\"index\" :value=\"item.id\">\r\n            {{ item.name }}\r\n          </a-radio>\r\n        </a-radio-group>\r\n      </a-form-item>\r\n      <a-form-item>\r\n        <a-button class=\"add\" html-type=\"submit\">添加</a-button>\r\n        <a-button class=\"clear\" html-type=\"reset\" @click=\"onClear\">清空</a-button>\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-drawer>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, toRefs, defineProps, defineEmits } from 'vue';\r\n\r\n// ✅ 接收父组件的 `showDrawer`\r\nconst props = defineProps({\r\n  showDrawer: Boolean\r\n});\r\n\r\n// ✅ 事件触发器，通知父组件修改 `showDrawer`\r\nconst emit = defineEmits(['sync-drawer']);\r\n\r\n// ✅ 让 `formState` 是响应式的\r\nconst dataSource = reactive({\r\n  formState: {\r\n    name: '',\r\n    price: '',\r\n    categories: ''\r\n  }\r\n});\r\nconst { formState } = toRefs(dataSource);\r\n\r\n// ✅ 关闭抽屉时，通知父组件修改 `showDrawer`\r\nconst afterOpenChange = (val) => {\r\n  if (!val) {\r\n    emit('sync-drawer', false); // 发送 `false`，通知父组件关闭抽屉\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AA8BA,SAASA,QAAQ,EAAEC,MAAgC,QAAQ,KAAK;;AAEhE;;;;;;;;;;;;;IACA,MAAMC,KAAK,GAAGC,OAEZ;;IAEF;IACA,MAAMC,IAAI,GAAGC,MAA4B;;IAEzC;IACA,MAAMC,UAAU,GAAGN,QAAQ,CAAC;MAC1BO,SAAS,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,UAAU,EAAE;MACd;IACF,CAAC,CAAC;IACF,MAAM;MAAEH;IAAU,CAAC,GAAGN,MAAM,CAACK,UAAU,CAAC;;IAExC;IACA,MAAMK,eAAe,GAAIC,GAAG,IAAK;MAC/B,IAAI,CAACA,GAAG,EAAE;QACRR,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;MAC9B;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}