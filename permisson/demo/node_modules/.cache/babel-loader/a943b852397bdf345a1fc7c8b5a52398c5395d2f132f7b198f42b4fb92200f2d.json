{"ast":null,"code":"import \"core-js/modules/es.array.with.js\";\nimport { ref, reactive } from 'vue';\nimport { message } from 'ant-design-vue';\nimport { InboxOutlined } from '@ant-design/icons-vue';\nimport { createDirectus, rest, uploadFiles, readFiles } from '@directus/sdk';\nimport { $getFile } from '@/api/file';\nexport default {\n  __name: 'ocr',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const imageUrl = ref('');\n    // 1️⃣ 创建 Directus 客户端\n    const client = createDirectus('http://localhost:8055').with(rest());\n\n    // 2️⃣ 初始化文件列表和上传状态\n    const fileList = ref([]);\n    let uploadStatus = ref('');\n    const open = ref(false);\n    const showDrawer = () => {\n      open.value = true;\n    };\n    const onClose = () => {\n      open.value = false;\n    };\n\n    // 3️⃣ 文件上传成功/失败时的处理\n    const handleChange = info => {\n      const status = info.file.status;\n      if (status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n      if (status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully.`);\n      } else if (status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    };\n\n    // 4️⃣ 上传文件后的显示逻辑\n    let dataSource = reactive({\n      formState: {\n        title: '',\n        id: '',\n        description: ''\n      },\n      imageUrl: ''\n    });\n\n    // 保存文件 ID\n    const fileId = ref(null);\n\n    // 5️⃣ 获取文件信息并显示\n    let showResult = async id => {\n      console.log('Fetching file info for ID:', id);\n      try {\n        const result = await $getFile(id); // 调用正确的 API 获取文件信息\n        imageUrl.value = `http://localhost:8055/assets/${result.id}`;\n        dataSource.formState.description = result.description || 'No description'; // 假设 response 包含 description 字段\n      } catch (error) {\n        console.error(\"Error fetching file:\", error);\n      }\n    };\n\n    // 处理文件拖拽事件\n    function handleDrop(e) {\n      const files = e.dataTransfer.files;\n      if (files.length > 0) {\n        const formData = new FormData();\n        for (let file of files) {\n          formData.append('file', file);\n        }\n        console.log('Uploading files:', formData);\n\n        // 上传文件处理逻辑\n        client.request(uploadFiles(formData)).then(response => {\n          console.log('Upload successful:', response);\n          // 保存文件 ID\n          fileId.value = response.id;\n          imageUrl.value = `http://localhost:8055/assets/${response.id}`;\n          message.success('File uploaded successfully!');\n\n          // 上传成功后获取文件信息\n          showResult(fileId.value); // 传入文件 ID 获取详细信息\n        }).catch(error => {\n          uploadStatus.value = 'Upload failed!';\n          message.error('File upload failed!');\n          console.error(error);\n        });\n      }\n    }\n    const __returned__ = {\n      imageUrl,\n      client,\n      fileList,\n      get uploadStatus() {\n        return uploadStatus;\n      },\n      set uploadStatus(v) {\n        uploadStatus = v;\n      },\n      open,\n      showDrawer,\n      onClose,\n      handleChange,\n      get dataSource() {\n        return dataSource;\n      },\n      set dataSource(v) {\n        dataSource = v;\n      },\n      fileId,\n      get showResult() {\n        return showResult;\n      },\n      set showResult(v) {\n        showResult = v;\n      },\n      handleDrop,\n      ref,\n      reactive,\n      get message() {\n        return message;\n      },\n      get InboxOutlined() {\n        return InboxOutlined;\n      },\n      get createDirectus() {\n        return createDirectus;\n      },\n      get rest() {\n        return rest;\n      },\n      get uploadFiles() {\n        return uploadFiles;\n      },\n      get readFiles() {\n        return readFiles;\n      },\n      get $getFile() {\n        return $getFile;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","message","InboxOutlined","createDirectus","rest","uploadFiles","readFiles","$getFile","imageUrl","client","with","fileList","uploadStatus","open","showDrawer","value","onClose","handleChange","info","status","file","console","log","success","name","error","dataSource","formState","title","id","description","fileId","showResult","result","handleDrop","e","files","dataTransfer","length","formData","FormData","append","request","then","response","catch"],"sources":["E:/permisson/demo/src/views/ocr/ocr.vue"],"sourcesContent":["<template>\r\n  <div class=\"uip\">\r\n    <a-upload-dragger\r\n      v-model:fileList=\"fileList\"\r\n      name=\"file\"\r\n      action='/files'\r\n      :multiple=\"true\"\r\n      @change=\"handleChange\"\r\n      @drop=\"handleDrop\"\r\n      :style=\"{ width: '600px', height: '100vh' }\"\r\n    >\r\n      <p class=\"ant-upload-drag-icon\">\r\n        <InboxOutlined></InboxOutlined>\r\n      </p>\r\n      <p class=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n      <p class=\"ant-upload-hint\">\r\n        Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n        band files\r\n      </p>\r\n    </a-upload-dragger>\r\n  </div>\r\n  <!-- 上传成功后的图片显示区域 -->\r\n  <div v-if=\"imageUrl\" class=\"image-container\">\r\n    <img :src=\"imageUrl\" alt=\"Uploaded Image\" @click=\"showDrawer\" class=\"uploaded-image\" />\r\n  </div>\r\n\r\n  <a-drawer\r\n    title=\"提取结果\"\r\n    :placement=\"top\"\r\n    :closable=\"false\"\r\n    :open=\"open\"\r\n    @close=\"onClose\"\r\n  >\r\n    <a-form :model=\"formState\" v-bind=\"layout\" :validate-messages=\"validateMessages\" :wrapperCol=\"{ span: 16 }\"\r\n      :label-col=\"{ span: 6 }\">\r\n      <a-form-item name=\"name\" label=\"提取结果\">\r\n        <a-input v-model:value=\"dataSource.formState.description\" />\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-drawer>\r\n\r\n  <p id=\"status\">{{ uploadStatus }}</p>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue';\r\nimport { message } from 'ant-design-vue';\r\nimport { InboxOutlined } from '@ant-design/icons-vue';\r\nimport { createDirectus, rest, uploadFiles, readFiles } from '@directus/sdk';\r\nimport { $getFile } from '@/api/file';\r\n\r\nconst imageUrl = ref('');\r\n// 1️⃣ 创建 Directus 客户端\r\nconst client = createDirectus('http://localhost:8055').with(rest());\r\n\r\n// 2️⃣ 初始化文件列表和上传状态\r\nconst fileList = ref([]);\r\nlet uploadStatus = ref('');\r\nconst open = ref(false);\r\nconst showDrawer = () => {\r\n  open.value = true;\r\n};\r\nconst onClose = () => {\r\n  open.value = false;\r\n};\r\n\r\n// 3️⃣ 文件上传成功/失败时的处理\r\nconst handleChange = (info) => {\r\n  const status = info.file.status;\r\n  if (status !== 'uploading') {\r\n    console.log(info.file, info.fileList);\r\n  }\r\n  if (status === 'done') {\r\n    message.success(`${info.file.name} file uploaded successfully.`);\r\n  } else if (status === 'error') {\r\n    message.error(`${info.file.name} file upload failed.`);\r\n  }\r\n};\r\n\r\n// 4️⃣ 上传文件后的显示逻辑\r\nlet dataSource = reactive({\r\n  formState: {\r\n    title: '',\r\n    id: '',\r\n    description: ''\r\n  },\r\n  imageUrl: ''\r\n});\r\n\r\n// 保存文件 ID\r\nconst fileId = ref(null);\r\n\r\n// 5️⃣ 获取文件信息并显示\r\nlet showResult = async (id) => {\r\n  console.log('Fetching file info for ID:', id);\r\n  try {\r\n    const result = await $getFile(id); // 调用正确的 API 获取文件信息\r\n    imageUrl.value = `http://localhost:8055/assets/${result.id}`;\r\n    dataSource.formState.description = result.description || 'No description'; // 假设 response 包含 description 字段\r\n  } catch (error) {\r\n    console.error(\"Error fetching file:\", error);\r\n  }\r\n};\r\n\r\n// 处理文件拖拽事件\r\nfunction handleDrop(e) {\r\n  const files = e.dataTransfer.files;\r\n  if (files.length > 0) {\r\n    const formData = new FormData();\r\n    for (let file of files) {\r\n      formData.append('file', file);\r\n    }\r\n    console.log('Uploading files:', formData);\r\n\r\n    // 上传文件处理逻辑\r\n    client.request(uploadFiles(formData))\r\n      .then((response) => {\r\n        console.log('Upload successful:', response);\r\n        // 保存文件 ID\r\n        fileId.value = response.id;\r\n        imageUrl.value = `http://localhost:8055/assets/${response.id}`;\r\n        message.success('File uploaded successfully!');\r\n        \r\n        // 上传成功后获取文件信息\r\n        showResult(fileId.value); // 传入文件 ID 获取详细信息\r\n      })\r\n      .catch((error) => {\r\n        uploadStatus.value = 'Upload failed!';\r\n        message.error('File upload failed!');\r\n        console.error(error);\r\n      });\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.uip {\r\n  height: 200px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.image-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n.uploaded-image {\r\n  width: 200px;\r\n  max-height: 200px;\r\n  border-radius: 10px;\r\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}