{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, toDisplayString as _toDisplayString, createBlock as _createBlock, mergeProps as _mergeProps } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_input_search = _resolveComponent(\"a-input-search\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_popconfirm = _resolveComponent(\"a-popconfirm\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  const _component_a_input = _resolveComponent(\"a-input\");\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n  const _component_a_radio = _resolveComponent(\"a-radio\");\n  const _component_a_radio_group = _resolveComponent(\"a-radio-group\");\n  const _component_a_form = _resolveComponent(\"a-form\");\n  const _component_a_drawer = _resolveComponent(\"a-drawer\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_a_input_search, {\n    class: \"searchText\",\n    value: $setup.searchKeyword,\n    \"onUpdate:value\": _cache[0] || (_cache[0] = $event => $setup.searchKeyword = $event),\n    placeholder: \"请输入产品名称\",\n    \"enter-button\": \"查询\",\n    size: \"default\",\n    onSearch: $setup.onSearch\n  }, null, 8 /* PROPS */, [\"value\", \"onSearch\"]), _createVNode(_component_a_button, {\n    type: \"primary\",\n    class: \"add-a\",\n    onClick: $setup.showDrawer\n  }, {\n    default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"添加\")])),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_a_table, {\n    dataSource: $setup.tableDatas,\n    columns: $setup.tableColumns\n  }, {\n    bodyCell: _withCtx(({\n      column,\n      text,\n      record\n    }) => [column.dataIndex === 'operation' ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_cache[7] || (_cache[7] = _createElementVNode(\"p\", null, \"2312312312321\", -1 /* HOISTED */)), _createVNode(_component_a_popconfirm, {\n      title: \"确定删除吗?\",\n      onConfirm: $event => $setup.onDelete(record)\n    }, {\n      default: _withCtx(() => _cache[6] || (_cache[6] = [_createElementVNode(\"a\", null, \"Delete\", -1 /* HOISTED */)])),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onConfirm\"])], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"dataSource\", \"columns\"]), _createVNode(_component_a_drawer, {\n    open: $setup.open,\n    \"onUpdate:open\": _cache[4] || (_cache[4] = $event => $setup.open = $event),\n    class: \"custom-class\",\n    \"root-class-name\": \"root-class-name\",\n    \"root-style\": {\n      color: 'blue'\n    },\n    style: {\n      \"color\": \"red\"\n    },\n    title: \"产品添加\",\n    placement: \"right\",\n    onAfterOpenChange: $setup.afterOpenChange\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_form, _mergeProps({\n      model: $setup.formState\n    }, _ctx.layout, {\n      \"validate-messages\": _ctx.validateMessages,\n      wrapperCol: {\n        span: 16\n      },\n      \"label-col\": {\n        span: 6\n      },\n      ref: \"formRef\",\n      onFinish: $setup.onFinish\n    }), {\n      default: _withCtx(() => [_createVNode(_component_a_form_item, {\n        name: \"name\",\n        label: \"产品名称\",\n        rules: [{\n          required: true,\n          message: '请输入产品名称！'\n        }]\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: $setup.formState.name,\n          \"onUpdate:value\": _cache[1] || (_cache[1] = $event => $setup.formState.name = $event)\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        name: \"price\",\n        label: \"价格\",\n        rules: [{\n          required: true,\n          message: '请输入价格！'\n        }]\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          value: $setup.formState.price,\n          \"onUpdate:value\": _cache[2] || (_cache[2] = $event => $setup.formState.price = $event)\n        }, null, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        name: \"categories\",\n        label: \"类别\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_radio_group, {\n          value: $setup.formState.categories,\n          \"onUpdate:value\": _cache[3] || (_cache[3] = $event => $setup.formState.categories = $event),\n          name: \"radioGroup\"\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.categoriesList, (item, index) => {\n            return _openBlock(), _createBlock(_component_a_radio, {\n              key: index,\n              value: item.id\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(item.name), 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"value\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_form_item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_button, {\n          class: \"add\",\n          \"html-type\": \"submit\"\n        }, {\n          default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"添加\")])),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_a_button, {\n          class: \"clear\",\n          \"html-type\": \"reset\",\n          onClick: $setup.onClear\n        }, {\n          default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\"清空\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 16 /* FULL_PROPS */, [\"model\", \"validate-messages\", \"onFinish\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"open\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createVNode","_component_a_input_search","value","$setup","searchKeyword","_cache","$event","placeholder","size","onSearch","_component_a_button","type","onClick","showDrawer","default","_withCtx","_createTextVNode","_","_component_a_table","dataSource","tableDatas","columns","tableColumns","bodyCell","column","text","record","dataIndex","key","_component_a_popconfirm","title","onConfirm","onDelete","_createCommentVNode","_component_a_drawer","open","color","style","placement","onAfterOpenChange","afterOpenChange","_component_a_form","_mergeProps","model","formState","_ctx","layout","validateMessages","wrapperCol","span","ref","onFinish","_component_a_form_item","name","label","rules","required","message","_component_a_input","price","_component_a_radio_group","categories","_renderList","categoriesList","item","index","_createBlock","_component_a_radio","id","_toDisplayString","offset","onClear"],"sources":["E:\\permisson\\demo\\src\\views\\products\\productsinfo.vue"],"sourcesContent":["<template>\r\n  <div class=\"search\">\r\n    <a-input-search class=\"searchText\" v-model:value=\"searchKeyword\" placeholder=\"请输入产品名称\" enter-button=\"查询\"\r\n      size=\"default\" @search=\"onSearch\" />\r\n    <a-button type=\"primary\" class=\"add-a\" @click=\"showDrawer\">添加</a-button>\r\n  </div>\r\n  <a-table :dataSource=\"tableDatas\" :columns=\"tableColumns\">\r\n    <template #bodyCell=\"{ column, text, record }\">\r\n      <template v-if=\"column.dataIndex === 'operation'\">\r\n        <p>2312312312321</p>\r\n        <a-popconfirm title=\"确定删除吗?\" @confirm=\"onDelete(record)\">\r\n          <a>Delete</a>\r\n        </a-popconfirm>\r\n      </template>\r\n    </template>\r\n  </a-table>\r\n  <a-drawer v-model:open=\"open\" class=\"custom-class\" root-class-name=\"root-class-name\" :root-style=\"{ color: 'blue' }\"\r\n    style=\"color: red\" title=\"产品添加\" placement=\"right\" @after-open-change=\"afterOpenChange\">\r\n    <a-form :model=\"formState\" v-bind=\"layout\" :validate-messages=\"validateMessages\" :wrapperCol=\"{ span: 16 }\"\r\n      :label-col=\"{ span: 6 }\" ref=\"formRef\" @finish=\"onFinish\">\r\n      <a-form-item name=\"name\" label=\"产品名称\" :rules=\"[{ required: true, message: '请输入产品名称！' }]\">\r\n        <a-input v-model:value=\"formState.name\" />\r\n      </a-form-item>\r\n      <a-form-item name=\"price\" label=\"价格\" :rules=\"[{ required: true, message: '请输入价格！' }]\">\r\n        <a-input v-model:value=\"formState.price\" />\r\n      </a-form-item>\r\n      <a-form-item name=\"categories\" label=\"类别\">\r\n        <a-radio-group v-model:value=\"formState.categories\" name=\"radioGroup\">\r\n          <a-radio v-for=\"(item, index) in categoriesList\" :key=\"index\" :value=\"item.id\">{{ item.name }}</a-radio>\r\n        </a-radio-group>\r\n      </a-form-item>\r\n      <a-form-item :wrapperCol=\"{ offset: 8, span: 16 }\">\r\n        <a-button class=\"add\" html-type=\"submit\">添加</a-button>\r\n        <a-button class=\"clear\" html-type=\"reset\" @click=\"onClear\">清空</a-button>\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-drawer>\r\n</template>\r\n\r\n<script setup>\r\n// import addProduct from '../../components/product/addProduct.vue'\r\nimport { reactive, toRefs, ref } from 'vue';\r\nimport { createDirectus, rest, readItems } from '@directus/sdk';\r\nimport { message } from 'ant-design-vue';\r\nimport { $categorieslist, $addProduct } from '../../api/proinfo.js'\r\nconst searchKeyword = ref('');\r\nconst open = ref(false);\r\nconst formRef = ref();\r\nconst afterOpenChange = bool => {\r\n  formRef.value.resetFields();\r\n};\r\nconst showDrawer = () => {\r\n  open.value = true;\r\n};\r\n// 数据源\r\nlet dataSource = reactive({\r\n  tableDatas: [],  // 确保 dataSource.tableDatas 一开始是空数组\r\n  tableColumns: [\r\n    {\r\n      title: '产品id',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n    },\r\n    {\r\n      title: '产品名称',\r\n      dataIndex: 'name'\r\n    },\r\n    {\r\n      title: '价格',\r\n      dataIndex: 'price'\r\n    },\r\n    {\r\n      title: '类别',\r\n      dataIndex: 'categories.name'\r\n    },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation'\r\n    }\r\n  ],\r\n  formState: {\r\n    name: '',\r\n    price: '',\r\n    categories: {\r\n      create: [\r\n        { categories_id: '' }, // 关联类别的 ID // 如果有多个类别\r\n      ]\r\n    }\r\n  },\r\n  categoriesList: []\r\n});\r\n// 使用 `toRefs` 解构 `reactive` 数据，方便在模板中直接使用\r\nlet { tableDatas, tableColumns, formState, categoriesList } = toRefs(dataSource);\r\nlet onFinish = () => {\r\n  const newProduct = {\r\n    name: dataSource.formState.name,\r\n    price: dataSource.formState.price,\r\n    categories: {\r\n      create: [\r\n        { categories_id: dataSource.formState.categories }, // 关联类别的 ID // 如果有多个类别\r\n      ]\r\n    }\r\n  };\r\n  console.log(newProduct);\r\n  $addProduct(newProduct)\r\n    .then(response => {\r\n      console.log(\"Product added successfully:\", response);\r\n      loadData()\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Failed to add product:\", error);\r\n    });\r\n  // const selectedCategoryName = formState.categories;\r\n  // const selectedCategory = dataSource.categoriesList.find(\r\n  //   (category) => category.name === selectedCategoryName\r\n  // );\r\n\r\n  // if (selectedCategory) {\r\n  //   // 将类别的 id 赋值给 formState.categories\r\n  //   formState.categories = selectedCategory.id;\r\n  // }\r\n  // const payload = {\r\n  //   name: dataSource.formState.name,\r\n  //   price: dataSource.formState.price,\r\n  //   categories: {\r\n  //     create: [{ id: dataSource.formState.categories }] // 将选中的 category id 转换为对象\r\n  //   }\r\n  // };\r\n\r\n  // console.log(dataSource.formState);\r\n  // $addProduct(dataSource.formState);\r\n  // $addProduct({\r\n  //   name: 666,\r\n  //   price: 12312312,\r\n  //   categories:  [ { id:'2'} ]   // 直接传递完整的 categories 对象\r\n  // });\r\n}\r\nlet onClear = () => {\r\n  formRef.value.resetFields();\r\n}\r\nlet onDelete = (no) => {\r\n  console.log(no)\r\n}\r\nconst client = createDirectus('http://localhost:8055').with(rest());\r\nlet loadCate = () => {\r\n  $categorieslist().then(r => {\r\n    dataSource.categoriesList = r.map(item => ({ id: item.id, name: item.name }));\r\n    // console.log(r);\r\n\r\n  })\r\n}\r\nlet loadData = async (searchKeyword = '') => {\r\n  try {\r\n    const filter = searchKeyword\r\n      ? {\r\n        filter: {\r\n          name: {\r\n            _contains: searchKeyword, // 直接查询包含关键字的产品\r\n          },\r\n        },\r\n      }\r\n      : {};\r\n\r\n    const result = await client.request(readItems('products', {\r\n      fields: [\r\n        '*'\r\n      ],\r\n      ...filter\r\n    }));\r\n    // let cate=result.categories.id\r\n    // 将返回的数据赋值给 tableDatas\r\n    tableDatas.value = result\r\n    console.log(tableDatas);\r\n\r\n  } catch (error) {\r\n    console.error('Failed to fetch items:', error);\r\n  }\r\n};\r\nloadData()\r\nloadCate()\r\nlet onSearch = (value) => {\r\n  searchKeyword.value = value;\r\n  loadData(value);  // 传递搜索内容\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.search {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n\r\n  .searchText {\r\n    width: 300px;\r\n  }\r\n\r\n  .add-a {\r\n    background: red;\r\n    border: none;\r\n  }\r\n\r\n  .add {\r\n    background: #bacf65;\r\n    border: none;\r\n    color: white\r\n  }\r\n\r\n  .clear {\r\n    margin-left: 10px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}