{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_input_search = _resolveComponent(\"a-input-search\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_a_input_search, {\n    class: \"searchText\",\n    value: $setup.searchKeyword,\n    \"onUpdate:value\": _cache[0] || (_cache[0] = $event => $setup.searchKeyword = $event),\n    placeholder: \"请输入产品名称\",\n    \"enter-button\": \"查询\",\n    size: \"default\",\n    onSearch: $setup.onSearch\n  }, null, 8 /* PROPS */, [\"value\", \"onSearch\"]), _createVNode(_component_a_button, {\n    type: \"primary\",\n    class: \"add\",\n    onClick: _cache[1] || (_cache[1] = $event => $setup.showDrawer = true)\n  }, {\n    default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"添加\")])),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_a_table, {\n    dataSource: $setup.tableDatas,\n    columns: $setup.tableColumns\n  }, null, 8 /* PROPS */, [\"dataSource\", \"columns\"]), _createVNode($setup[\"AddProduct\"], {\n    open: $setup.showDrawer,\n    \"onUpdate:open\": _cache[2] || (_cache[2] = $event => $setup.showDrawer = $event)\n  }, null, 8 /* PROPS */, [\"open\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createVNode","_component_a_input_search","value","$setup","searchKeyword","_cache","$event","placeholder","size","onSearch","_component_a_button","type","onClick","showDrawer","default","_withCtx","_createTextVNode","_","_component_a_table","dataSource","tableDatas","columns","tableColumns","open"],"sources":["E:\\permisson\\demo\\src\\views\\products\\productsinfo.vue"],"sourcesContent":["<template>\r\n  <div class=\"search\">\r\n    <a-input-search\r\n    class=\"searchText\"\r\n      v-model:value=\"searchKeyword\"\r\n      placeholder=\"请输入产品名称\"\r\n      enter-button=\"查询\"\r\n      size=\"default\"\r\n      @search=\"onSearch\"\r\n    />\r\n    <a-button type=\"primary\" class=\"add\" @click=\"showDrawer=true\">添加</a-button>\r\n  </div>\r\n  <a-table :dataSource=\"tableDatas\" :columns=\"tableColumns\" />\r\n  <AddProduct v-model:open=\"showDrawer\" />\r\n</template>\r\n\r\n<script setup>\r\nimport AddProduct from '../../components/product/addProduct';\r\nimport { reactive, toRefs, ref } from 'vue';\r\nimport { createDirectus, rest, readItems } from '@directus/sdk';\r\nconst searchKeyword = ref('');\r\nconst showDrawer = ref(false);\r\n// 数据源\r\nlet dataSource = reactive({\r\n  tableDatas: [],  // 确保 dataSource.tableDatas 一开始是空数组\r\n  tableColumns: [\r\n      {\r\n          title: '产品id',\r\n          dataIndex: 'id',\r\n          key: 'id',\r\n      },\r\n      {\r\n          title: '产品名称',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n      },\r\n      {\r\n          title: '价格',\r\n          dataIndex: 'price',\r\n          key: 'price',\r\n      },\r\n      {\r\n          title: '类别',\r\n          dataIndex: 'sort',\r\n          key: 'sort',\r\n      }\r\n  ]\r\n});\r\n// 使用 `toRefs` 解构 `reactive` 数据，方便在模板中直接使用\r\nlet { tableDatas, tableColumns } = toRefs(dataSource);\r\nconst client = createDirectus('http://localhost:8055').with(rest());\r\nlet loadData=async(searchKeyword='')=>{\r\ntry {\r\n  const filter = searchKeyword\r\n      ? {\r\n          filter: {\r\n            name: {\r\n              _contains: searchKeyword, // 直接查询包含关键字的产品\r\n            },\r\n          },\r\n        }\r\n      : {};\r\n\r\n    const result = await client.request(readItems('products', {\r\n      fields: ['*'],\r\n      ...filter, // 传入过滤条件\r\n    }));\r\n\r\n  // 将返回的数据赋值给 tableDatas\r\n  tableDatas.value = result\r\n} catch (error) {\r\n  console.error('Failed to fetch items:', error);\r\n}\r\n};\r\nloadData()\r\nlet onSearch=(value)=>{\r\n  searchKeyword.value = value;\r\n  loadData(value);  // 传递搜索内容\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.search{\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  .searchText{\r\n    width: 300px;\r\n  }\r\n  .add{\r\n    background: red;\r\n    border: none;\r\n  }\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAQ;;;;;uBADrBC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAUM,OAVNC,UAUM,GATJC,YAAA,CAOEC,yBAAA;IANFN,KAAK,EAAC,YAAY;IACRO,KAAK,EAAEC,MAAA,CAAAC,aAAa;IAJlC,kBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIqBH,MAAA,CAAAC,aAAa,GAAAE,MAAA;IAC5BC,WAAW,EAAC,SAAS;IACrB,cAAY,EAAC,IAAI;IACjBC,IAAI,EAAC,SAAS;IACbC,QAAM,EAAEN,MAAA,CAAAM;kDAEXT,YAAA,CAA2EU,mBAAA;IAAjEC,IAAI,EAAC,SAAS;IAAChB,KAAK,EAAC,KAAK;IAAEiB,OAAK,EAAAP,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEH,MAAA,CAAAU,UAAU;;IAV3DC,OAAA,EAAAC,QAAA,CAUkE,MAAEV,MAAA,QAAAA,MAAA,OAVpEW,gBAAA,CAUkE,IAAE,E;IAVpEC,CAAA;QAYEjB,YAAA,CAA4DkB,kBAAA;IAAlDC,UAAU,EAAEhB,MAAA,CAAAiB,UAAU;IAAGC,OAAO,EAAElB,MAAA,CAAAmB;sDAC5CtB,YAAA,CAAwCG,MAAA;IAApBoB,IAAI,EAAEpB,MAAA,CAAAU,UAAU;IAbtC,iBAAAR,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAa4BH,MAAA,CAAAU,UAAU,GAAAP,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}