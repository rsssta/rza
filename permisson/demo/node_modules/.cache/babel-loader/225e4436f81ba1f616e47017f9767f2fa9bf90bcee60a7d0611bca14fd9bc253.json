{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_table = _resolveComponent(\"a-table\");\n  return _openBlock(), _createBlock(_component_a_table, {\n    dataSource: $setup.tableDatas,\n    columns: $setup.tableColumns\n  }, null, 8 /* PROPS */, [\"dataSource\", \"columns\"]);\n}","map":{"version":3,"names":["_createBlock","_component_a_table","dataSource","$setup","tableDatas","columns","tableColumns"],"sources":["E:\\permisson\\demo\\src\\views\\products\\productsinfo.vue"],"sourcesContent":["<template>\r\n    <a-table :dataSource=\"tableDatas\" :columns=\"tableColumns\" />\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, toRefs, onMounted } from 'vue';\r\nimport { createDirectus, rest, readItems, ref } from '@directus/sdk';\r\n\r\n// 数据源\r\nlet dataSource = reactive({\r\n    tableDatas: [],  // 确保 dataSource.tableDatas 一开始是空数组\r\n    tableColumns: [\r\n        {\r\n            title: '产品id',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: '产品名称',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: '价格',\r\n            dataIndex: 'price',\r\n            key: 'price',\r\n        },\r\n        {\r\n            title: '类别',\r\n            dataIndex: 'sort',\r\n            key: 'sort',\r\n        }\r\n    ]\r\n});\r\n\r\n// 使用 `toRefs` 解构 `reactive` 数据，方便在模板中直接使用\r\nlet { tableDatas, tableColumns } = toRefs(dataSource);\r\nconst client = createDirectus('http://localhost:8055').with(rest());\r\n\r\n// 数据存储和状态管理\r\nconst pr = ref([]);\r\nonMounted(async () => {\r\n  await fetchItems();\r\n});\r\n\r\n// 获取产品数据\r\nasync function fetchItems() {\r\n  try {\r\n    const result = await client.request(readItems('products', {\r\n      fields: ['*'],\r\n    }));\r\n    console.log(result);\r\n    pr.value = result.data;\r\n  } catch (error) {\r\n    console.error('Failed to fetch items:', error);\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;;uBACIA,YAAA,CAA4DC,kBAAA;IAAlDC,UAAU,EAAEC,MAAA,CAAAC,UAAU;IAAGC,OAAO,EAAEF,MAAA,CAAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}