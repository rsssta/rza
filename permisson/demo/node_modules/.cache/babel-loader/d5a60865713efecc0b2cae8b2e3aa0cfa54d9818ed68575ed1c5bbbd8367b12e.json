{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_menu = _resolveComponent(\"a-menu\");\n  const _component_a_layout_sider = _resolveComponent(\"a-layout-sider\");\n  const _component_a_layout_header = _resolveComponent(\"a-layout-header\");\n  const _component_a_layout_content = _resolveComponent(\"a-layout-content\");\n  const _component_a_layout = _resolveComponent(\"a-layout\");\n  return _openBlock(), _createBlock(_component_a_layout, {\n    class: \"layout\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_layout_sider, {\n      collapsed: $setup.collapsed,\n      \"onUpdate:collapsed\": _cache[2] || (_cache[2] = $event => $setup.collapsed = $event),\n      trigger: null,\n      collapsible: \"\"\n    }, {\n      default: _withCtx(() => [_cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n        class: \"logo\"\n      }, null, -1 /* HOISTED */)), _createVNode(_component_a_menu, {\n        openKeys: _ctx.state.openKeys,\n        \"onUpdate:openKeys\": _cache[0] || (_cache[0] = $event => _ctx.state.openKeys = $event),\n        selectedKeys: _ctx.state.selectedKeys,\n        \"onUpdate:selectedKeys\": _cache[1] || (_cache[1] = $event => _ctx.state.selectedKeys = $event),\n        mode: \"inline\",\n        theme: \"dark\",\n        \"inline-collapsed\": _ctx.state.collapsed,\n        items: _ctx.items\n      }, {\n        default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\" < \")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"openKeys\", \"selectedKeys\", \"inline-collapsed\", \"items\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"collapsed\"]), _createVNode(_component_a_layout, null, {\n      default: _withCtx(() => [_createVNode(_component_a_layout_header, {\n        style: {\n          \"background\": \"#fff\",\n          \"padding\": \"0\"\n        }\n      }, {\n        default: _withCtx(() => [$setup.collapsed ? (_openBlock(), _createBlock($setup[\"MenuUnfoldOutlined\"], {\n          key: 0,\n          class: \"trigger\",\n          onClick: _cache[3] || (_cache[3] = () => $setup.collapsed = !$setup.collapsed)\n        })) : (_openBlock(), _createBlock($setup[\"MenuFoldOutlined\"], {\n          key: 1,\n          class: \"trigger\",\n          onClick: _cache[4] || (_cache[4] = () => $setup.collapsed = !$setup.collapsed)\n        }))]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_a_layout_content, {\n        style: {\n          margin: '6px',\n          padding: '6px',\n          background: '#fff',\n          minHeight: '280px'\n        }\n      }, {\n        default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\" Content \")])),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_a_layout","class","default","_withCtx","_createVNode","_component_a_layout_sider","collapsed","$setup","_cache","$event","trigger","collapsible","_createElementVNode","_component_a_menu","openKeys","_ctx","state","selectedKeys","mode","theme","items","_createTextVNode","_","_component_a_layout_header","style","key","onClick","_component_a_layout_content","margin","padding","background","minHeight"],"sources":["E:\\permisson\\demo\\src\\views\\Layout.vue"],"sourcesContent":["<!-- <template>\r\n    <div>\r\n      <ul>\r\n        <li v-for=\"item in items\" :key=\"item.id\">\r\n          {{ item.name }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n</template> -->\r\n<template>\r\n  <a-layout class=\"layout\">\r\n    <a-layout-sider v-model:collapsed=\"collapsed\" :trigger=\"null\" collapsible>\r\n      <div class=\"logo\" />\r\n      <a-menu\r\n      v-model:openKeys=\"state.openKeys\"\r\n      v-model:selectedKeys=\"state.selectedKeys\"\r\n      mode=\"inline\"\r\n      theme=\"dark\"\r\n      :inline-collapsed=\"state.collapsed\"\r\n      :items=\"items\"\r\n    >\r\n    <\r\n  </a-menu>\r\n    </a-layout-sider>\r\n    <a-layout>\r\n      <a-layout-header style=\"background: #fff; padding: 0\">\r\n        <menu-unfold-outlined\r\n          v-if=\"collapsed\"\r\n          class=\"trigger\"\r\n          @click=\"() => (collapsed = !collapsed)\"\r\n        />\r\n        <menu-fold-outlined v-else class=\"trigger\" @click=\"() => (collapsed = !collapsed)\" />\r\n      </a-layout-header>\r\n      <a-layout-content\r\n        :style=\"{ margin: '6px', padding: '6px', background: '#fff', minHeight: '280px' }\"\r\n      >\r\n        Content\r\n      </a-layout-content>\r\n    </a-layout>\r\n  </a-layout>\r\n</template>\r\n<script setup>\r\nimport { reactive, watch, h,ref, onMounted  } from 'vue';\r\nimport {\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n} from '@ant-design/icons-vue';\r\nimport { createDirectus, rest, readItems } from '@directus/sdk';\r\n\r\nconst client = createDirectus('http://localhost:8055').with(rest());\r\n\r\n// 定义需要的数据和状态\r\nconst selectedKeys = ref(['1']);\r\nconst collapsed = ref(false);\r\nconst pr = ref([]);\r\n\r\n// 在组件挂载时调用获取数据的函数\r\nonMounted(async () => {\r\n  await fetchItems();\r\n});\r\n\r\n// 获取数据的方法\r\nasync function fetchItems() {\r\n  try {\r\n    const result = await client.request(readItems('products', {\r\n      fields: ['*'],  // 获取所有字段\r\n    }));\r\n    console.log(result);\r\n    pr.value = result.data;\r\n  } catch (error) {\r\n    console.error('Failed to fetch items:', error);\r\n  }\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.layout{\r\n  width: 100vw;\r\n  height: 100vh;\r\n}\r\n.logo{\r\n  height: 32px;\r\n  background: rgba(255, 255, 255, 0.3);\r\n  margin: 16px;\r\n}\r\n.trigger{\r\n  font-size: 18px;\r\n  line-height: 64px;\r\n  padding: 0 24px;\r\n  cursor: pointer;\r\n  transition: color 0.3s;\r\n  &:hover{\r\n    color: #054de7;\r\n  }\r\n  span{\r\n    overflow: hidden;\r\n  }\r\n}\r\n</style>"],"mappings":";;;;;;;uBAUEA,YAAA,CA6BWC,mBAAA;IA7BDC,KAAK,EAAC;EAAQ;IAV1BC,OAAA,EAAAC,QAAA,CAWI,MAYiB,CAZjBC,YAAA,CAYiBC,yBAAA;MAZOC,SAAS,EAAEC,MAAA,CAAAD,SAAS;MAXhD,sBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAWuCF,MAAA,CAAAD,SAAS,GAAAG,MAAA;MAAGC,OAAO,EAAE,IAAI;MAAEC,WAAW,EAAX;;MAXlET,OAAA,EAAAC,QAAA,CAYM,MAAoB,C,0BAApBS,mBAAA,CAAoB;QAAfX,KAAK,EAAC;MAAM,6BACjBG,YAAA,CASKS,iBAAA;QARGC,QAAQ,EAAEC,IAAA,CAAAC,KAAK,CAACF,QAAQ;QAdtC,qBAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAcwBM,IAAA,CAAAC,KAAK,CAACF,QAAQ,GAAAL,MAAA;QACxBQ,YAAY,EAAEF,IAAA,CAAAC,KAAK,CAACC,YAAY;QAf9C,yBAAAT,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAe4BM,IAAA,CAAAC,KAAK,CAACC,YAAY,GAAAR,MAAA;QACxCS,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAC,MAAM;QACX,kBAAgB,EAAEJ,IAAA,CAAAC,KAAK,CAACV,SAAS;QACjCc,KAAK,EAAEL,IAAA,CAAAK;;QAnBdlB,OAAA,EAAAC,QAAA,CAoBK,MAEHK,MAAA,QAAAA,MAAA,OAtBFa,gBAAA,CAoBK,KAEH,E;QAtBFC,CAAA;;MAAAA,CAAA;sCAwBIlB,YAAA,CAcWJ,mBAAA;MAtCfE,OAAA,EAAAC,QAAA,CAyBM,MAOkB,CAPlBC,YAAA,CAOkBmB,0BAAA;QAPDC,KAAoC,EAApC;UAAA;UAAA;QAAA;MAAoC;QAzB3DtB,OAAA,EAAAC,QAAA,CA0BQ,MAIE,CAHMI,MAAA,CAAAD,SAAS,I,cADjBP,YAAA,CAIEQ,MAAA;UA9BVkB,GAAA;UA4BUxB,KAAK,EAAC,SAAS;UACdyB,OAAK,EAAAlB,MAAA,QAAAA,MAAA,YAASD,MAAA,CAAAD,SAAS,IAAIC,MAAA,CAAAD,SAAS;6BAEvCP,YAAA,CAAqFQ,MAAA;UA/B7FkB,GAAA;UA+BmCxB,KAAK,EAAC,SAAS;UAAEyB,OAAK,EAAAlB,MAAA,QAAAA,MAAA,YAASD,MAAA,CAAAD,SAAS,IAAIC,MAAA,CAAAD,SAAS;;QA/BxFgB,CAAA;UAiCMlB,YAAA,CAImBuB,2BAAA;QAHhBH,KAAK,EAAE;UAAAI,MAAA;UAAAC,OAAA;UAAAC,UAAA;UAAAC,SAAA;QAAA;MAAyE;QAlCzF7B,OAAA,EAAAC,QAAA,CAmCO,MAEDK,MAAA,QAAAA,MAAA,OArCNa,gBAAA,CAmCO,WAED,E;QArCNC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}