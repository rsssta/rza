{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { reactive } from 'vue';\nimport { $categorieslist, $addProduct, $delProduct, $getProduct } from '../../api/proinfo.js';\nexport default {\n  __name: 'addProduct',\n  props: ['showDrawer'],\n  emits: ['sync-drawer'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    let data = reactive({\n      formState: {\n        id: '',\n        name: '',\n        price: '',\n        categories: {\n          create: [{\n            categories_id: ''\n          } // 关联类别的 ID // 如果有多个类别\n          ]\n        }\n      },\n      categoriesList: []\n    });\n    console.log(__props.showDrawer);\n    let emit = __emit;\n    let afterOpenChange = val => {\n      console.log(val);\n      if (!val) {\n        emit('sync-drawer', val);\n      }\n    };\n    const closeDrawer = () => {\n      emit('sync-drawer', false);\n    };\n    let onFinish = () => {\n      const newProduct = {\n        name: data.formState.name,\n        price: data.formState.price,\n        categories: {\n          create: [{\n            categories_id: data.formState.categories\n          } // 关联类别的 ID // 如果有多个类别\n          ]\n        }\n      };\n      $addProduct(newProduct).then(response => {\n        message.success(\"产品添加成功\");\n        loadData();\n      }).catch(error => {\n        message.error(\"产品添加失败\");\n      });\n    };\n    let loadCate = () => {\n      $categorieslist().then(r => {\n        data.categoriesList = r.map(item => ({\n          id: item.id,\n          name: item.name\n        }));\n        console.log(data.categoriesList);\n      });\n    };\n    loadCate();\n    const __returned__ = {\n      get data() {\n        return data;\n      },\n      set data(v) {\n        data = v;\n      },\n      get emit() {\n        return emit;\n      },\n      set emit(v) {\n        emit = v;\n      },\n      get afterOpenChange() {\n        return afterOpenChange;\n      },\n      set afterOpenChange(v) {\n        afterOpenChange = v;\n      },\n      closeDrawer,\n      get onFinish() {\n        return onFinish;\n      },\n      set onFinish(v) {\n        onFinish = v;\n      },\n      get loadCate() {\n        return loadCate;\n      },\n      set loadCate(v) {\n        loadCate = v;\n      },\n      reactive,\n      get $categorieslist() {\n        return $categorieslist;\n      },\n      get $addProduct() {\n        return $addProduct;\n      },\n      get $delProduct() {\n        return $delProduct;\n      },\n      get $getProduct() {\n        return $getProduct;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","$categorieslist","$addProduct","$delProduct","$getProduct","data","formState","id","name","price","categories","create","categories_id","categoriesList","console","log","__props","showDrawer","emit","__emit","afterOpenChange","val","closeDrawer","onFinish","newProduct","then","response","message","success","loadData","catch","error","loadCate","r","map","item"],"sources":["E:/permisson/demo/src/components/product/addProduct.vue"],"sourcesContent":["<template>\r\n  <a-drawer  :open=\"showDrawer\" class=\"custom-class\" root-class-name=\"root-class-name\" :root-style=\"{ color: 'blue' }\"\r\n   style=\"color: red\" title=\"产品添加\" placement=\"right\" @after-open-change=\"afterOpenChange\" @close=\"closeDrawer\">\r\n   <a-form :model=\"formState\" v-bind=\"layout\" :validate-messages=\"validateMessages\" :wrapperCol=\"{ span: 16 }\"\r\n     :label-col=\"{ span: 6 }\" ref=\"formRef\" @finish=\"onFinish\">\r\n     <a-form-item name=\"name\" label=\"产品名称\" :rules=\"[{ required: true, message: '请输入产品名称！' }]\">\r\n       <a-input v-model:value=\"data.formState.name\" />\r\n     </a-form-item>\r\n     <a-form-item name=\"price\" label=\"价格\" :rules=\"[{ required: true, message: '请输入价格！' }]\">\r\n       <a-input v-model:value=\"data.formState.price\" />\r\n     </a-form-item>\r\n     <a-form-item name=\"categories\" label=\"类别\">\r\n       <a-radio-group v-model:value=\"data.formState.categories\" name=\"radioGroup\">\r\n         <a-radio v-for=\"(item, index) in data.categoriesList\" :key=\"index\" :value=\"item.id\">{{ item.name }}</a-radio>\r\n       </a-radio-group>\r\n     </a-form-item>\r\n     <a-form-item :wrapperCol=\"{ offset: 8, span: 16 }\">\r\n       <a-button class=\"add\" html-type=\"submit\">添加</a-button>\r\n       <a-button class=\"clear\" html-type=\"reset\" @click=\"onClear\">清空</a-button>\r\n     </a-form-item>\r\n   </a-form>\r\n </a-drawer>\r\n</template>\r\n<script setup>\r\nimport { reactive} from 'vue';\r\nlet data=reactive({\r\n formState:{\r\n   id:'',\r\n   name:'',\r\n   price:'',\r\n   categories: {\r\n      create: [\r\n        { categories_id: '' }, // 关联类别的 ID // 如果有多个类别\r\n      ]\r\n    }\r\n },\r\n categoriesList: []\r\n})\r\nimport { $categorieslist, $addProduct,$delProduct,$getProduct } from '../../api/proinfo.js'\r\nlet{showDrawer}=defineProps(['showDrawer'])\r\nconsole.log(showDrawer);\r\n\r\nlet emit=defineEmits(['sync-drawer'])\r\nlet afterOpenChange=(val)=>{\r\n console.log(val);\r\n \r\n if(!val){\r\n   emit('sync-drawer',val)\r\n }\r\n }\r\n const closeDrawer = () => {\r\n  emit('sync-drawer', false);\r\n};\r\nlet onFinish = () => {\r\n  const newProduct = {\r\n    name: data.formState.name,\r\n    price: data.formState.price,\r\n    categories: {\r\n      create: [\r\n        { categories_id: data.formState.categories }, // 关联类别的 ID // 如果有多个类别\r\n      ]\r\n    }\r\n  };\r\n  $addProduct(newProduct)\r\n    .then(response => {\r\n      message.success(\"产品添加成功\");\r\n      loadData()\r\n    })\r\n    .catch(error => {\r\n      message.error(\"产品添加失败\");\r\n    });\r\n  \r\n}\r\nlet loadCate = () => {\r\n  $categorieslist().then(r => {\r\n    data.categoriesList = r.map(item => ({ id: item.id, name: item.name }));\r\n    console.log(data.categoriesList);\r\n\r\n  })\r\n}\r\n\r\nloadCate()\r\n</script> "],"mappings":";;AAwBA,SAASA,QAAQ,QAAO,KAAK;AAc7B,SAASC,eAAe,EAAEC,WAAW,EAACC,WAAW,EAACC,WAAW,QAAQ,sBAAsB;;;;;;;;;;IAb3F,IAAIC,IAAI,GAACL,QAAQ,CAAC;MACjBM,SAAS,EAAC;QACRC,EAAE,EAAC,EAAE;QACLC,IAAI,EAAC,EAAE;QACPC,KAAK,EAAC,EAAE;QACRC,UAAU,EAAE;UACTC,MAAM,EAAE,CACN;YAAEC,aAAa,EAAE;UAAG,CAAC,CAAE;UAAA;QAE3B;MACH,CAAC;MACDC,cAAc,EAAE;IACjB,CAAC,CAAC;IAGFC,OAAO,CAACC,GAAG,CAACC,OAAA,CAAAC,UAAU,CAAC;IAEvB,IAAIC,IAAI,GAACC,MAA4B;IACrC,IAAIC,eAAe,GAAEC,GAAG,IAAG;MAC1BP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MAEhB,IAAG,CAACA,GAAG,EAAC;QACNH,IAAI,CAAC,aAAa,EAACG,GAAG,CAAC;MACzB;IACA,CAAC;IACD,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACzBJ,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC;IAC5B,CAAC;IACD,IAAIK,QAAQ,GAAGA,CAAA,KAAM;MACnB,MAAMC,UAAU,GAAG;QACjBhB,IAAI,EAAEH,IAAI,CAACC,SAAS,CAACE,IAAI;QACzBC,KAAK,EAAEJ,IAAI,CAACC,SAAS,CAACG,KAAK;QAC3BC,UAAU,EAAE;UACVC,MAAM,EAAE,CACN;YAAEC,aAAa,EAAEP,IAAI,CAACC,SAAS,CAACI;UAAW,CAAC,CAAE;UAAA;QAElD;MACF,CAAC;MACDR,WAAW,CAACsB,UAAU,CAAC,CACpBC,IAAI,CAACC,QAAQ,IAAI;QAChBC,OAAO,CAACC,OAAO,CAAC,QAAQ,CAAC;QACzBC,QAAQ,CAAC,CAAC;MACZ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACdJ,OAAO,CAACI,KAAK,CAAC,QAAQ,CAAC;MACzB,CAAC,CAAC;IAEN,CAAC;IACD,IAAIC,QAAQ,GAAGA,CAAA,KAAM;MACnB/B,eAAe,CAAC,CAAC,CAACwB,IAAI,CAACQ,CAAC,IAAI;QAC1B5B,IAAI,CAACQ,cAAc,GAAGoB,CAAC,CAACC,GAAG,CAACC,IAAI,KAAK;UAAE5B,EAAE,EAAE4B,IAAI,CAAC5B,EAAE;UAAEC,IAAI,EAAE2B,IAAI,CAAC3B;QAAK,CAAC,CAAC,CAAC;QACvEM,OAAO,CAACC,GAAG,CAACV,IAAI,CAACQ,cAAc,CAAC;MAElC,CAAC,CAAC;IACJ,CAAC;IAEDmB,QAAQ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}