{"ast":null,"code":"import \"core-js/modules/es.array.with.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { reactive, toRefs } from 'vue';\nimport { createDirectus, rest, readItems, ref } from '@directus/sdk';\n// 数据源\n\nexport default {\n  __name: 'productsinfo',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let dataSource = reactive({\n      tableDatas: [],\n      tableColumns: [{\n        title: '产品id',\n        dataIndex: 'id',\n        key: 'id'\n      }, {\n        title: '产品名称',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: '价格',\n        dataIndex: 'price',\n        key: 'price'\n      }, {\n        title: '类别',\n        dataIndex: 'sort',\n        key: 'sort'\n      }]\n    });\n    let {\n      tableDatas,\n      tableColumns\n    } = toRefs(dataSource);\n    const client = createDirectus('http://localhost:8055').with(rest());\n    // 获取产品数据\n    async function fetchItems() {\n      try {\n        const result = await client.request(readItems('products', {\n          fields: ['*']\n        }));\n        console.log(result);\n        tableDatas.value = result.data.map(item => ({\n          key: item.id,\n          // 使用 id 作为 key\n          id: item.id,\n          name: item.name,\n          price: item.price,\n          sort: item.sort\n        }));\n      } catch (error) {\n        console.error('Failed to fetch items:', error);\n      }\n    }\n    ;\n    const __returned__ = {\n      get dataSource() {\n        return dataSource;\n      },\n      set dataSource(v) {\n        dataSource = v;\n      },\n      get tableDatas() {\n        return tableDatas;\n      },\n      set tableDatas(v) {\n        tableDatas = v;\n      },\n      get tableColumns() {\n        return tableColumns;\n      },\n      set tableColumns(v) {\n        tableColumns = v;\n      },\n      client,\n      fetchItems,\n      reactive,\n      toRefs,\n      get createDirectus() {\n        return createDirectus;\n      },\n      get rest() {\n        return rest;\n      },\n      get readItems() {\n        return readItems;\n      },\n      get ref() {\n        return ref;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","toRefs","createDirectus","rest","readItems","ref","dataSource","tableDatas","tableColumns","title","dataIndex","key","client","with","fetchItems","result","request","fields","console","log","value","data","map","item","id","name","price","sort","error"],"sources":["E:/permisson/demo/src/views/products/productsinfo.vue"],"sourcesContent":["<template>\r\n    <a-table :dataSource=\"dataSource\" :columns=\"columns\" />\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive,toRefs } from 'vue';\r\nimport { createDirectus, rest, readItems,ref } from '@directus/sdk';\r\n// 数据源\r\nlet dataSource = reactive({\r\n    tableDatas:[],\r\n    tableColumns:[\r\n    {\r\n        title: '产品id',\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n    },\r\n    {\r\n        title: '产品名称',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        key: 'price',\r\n    },\r\n    {\r\n        title: '类别',\r\n        dataIndex: 'sort',\r\n        key: 'sort',\r\n    }\r\n    ]\r\n});\r\nlet { tableDatas, tableColumns } = toRefs(dataSource);\r\nconst client = createDirectus('http://localhost:8055').with(rest());\r\n// 获取产品数据\r\nasync function fetchItems() {\r\n    try {\r\n        const result = await client.request(readItems('products', {\r\n            fields: ['*'],\r\n        }));\r\n        console.log(result);\r\n        tableDatas.value = result.data.map(item => ({\r\n            key: item.id,  // 使用 id 作为 key\r\n            id: item.id,\r\n            name: item.name,\r\n            price: item.price,\r\n            sort: item.sort,\r\n        }));\r\n    } catch (error) {\r\n        console.error('Failed to fetch items:', error);\r\n    }\r\n};\r\n</script>"],"mappings":";;;AAKA,SAASA,QAAQ,EAACC,MAAM,QAAQ,KAAK;AACrC,SAASC,cAAc,EAAEC,IAAI,EAAEC,SAAS,EAACC,GAAG,QAAQ,eAAe;AACnE;;;;;;;;IACA,IAAIC,UAAU,GAAGN,QAAQ,CAAC;MACtBO,UAAU,EAAC,EAAE;MACbC,YAAY,EAAC,CACb;QACIC,KAAK,EAAE,MAAM;QACbC,SAAS,EAAE,IAAI;QACfC,GAAG,EAAE;MACT,CAAC,EACD;QACIF,KAAK,EAAE,MAAM;QACbC,SAAS,EAAE,MAAM;QACjBC,GAAG,EAAE;MACT,CAAC,EACD;QACIF,KAAK,EAAE,IAAI;QACXC,SAAS,EAAE,OAAO;QAClBC,GAAG,EAAE;MACT,CAAC,EACD;QACIF,KAAK,EAAE,IAAI;QACXC,SAAS,EAAE,MAAM;QACjBC,GAAG,EAAE;MACT,CAAC;IAEL,CAAC,CAAC;IACF,IAAI;MAAEJ,UAAU;MAAEC;IAAa,CAAC,GAAGP,MAAM,CAACK,UAAU,CAAC;IACrD,MAAMM,MAAM,GAAGV,cAAc,CAAC,uBAAuB,CAAC,CAACW,IAAI,CAACV,IAAI,CAAC,CAAC,CAAC;IACnE;IACA,eAAeW,UAAUA,CAAA,EAAG;MACxB,IAAI;QACA,MAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,OAAO,CAACZ,SAAS,CAAC,UAAU,EAAE;UACtDa,MAAM,EAAE,CAAC,GAAG;QAChB,CAAC,CAAC,CAAC;QACHC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;QACnBR,UAAU,CAACa,KAAK,GAAGL,MAAM,CAACM,IAAI,CAACC,GAAG,CAACC,IAAI,KAAK;UACxCZ,GAAG,EAAEY,IAAI,CAACC,EAAE;UAAG;UACfA,EAAE,EAAED,IAAI,CAACC,EAAE;UACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;UACfC,KAAK,EAAEH,IAAI,CAACG,KAAK;UACjBC,IAAI,EAAEJ,IAAI,CAACI;QACf,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZV,OAAO,CAACU,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACJ;IAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}