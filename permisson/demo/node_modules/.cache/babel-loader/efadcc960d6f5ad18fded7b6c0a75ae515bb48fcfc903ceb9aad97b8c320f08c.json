{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createVNode as _createVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"uip\"\n};\nconst _hoisted_2 = {\n  class: \"ant-upload-drag-icon\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"image-container\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  id: \"status\"\n};\nconst _hoisted_6 = {\n  id: \"status\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_upload_dragger = _resolveComponent(\"a-upload-dragger\");\n  const _component_a_drawer = _resolveComponent(\"a-drawer\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" 文件上传框 \"), _createVNode(_component_a_upload_dragger, {\n    fileList: $setup.fileList,\n    \"onUpdate:fileList\": _cache[0] || (_cache[0] = $event => $setup.fileList = $event),\n    name: \"file\",\n    action: \"/files\",\n    multiple: true,\n    onChange: $setup.handleChange,\n    onDrop: $setup.handleDrop\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"p\", _hoisted_2, [_createVNode($setup[\"InboxOutlined\"])]), _cache[1] || (_cache[1] = _createElementVNode(\"p\", {\n      class: \"ant-upload-text\"\n    }, \"Click or drag file to this area to upload\", -1 /* HOISTED */)), _cache[2] || (_cache[2] = _createElementVNode(\"p\", {\n      class: \"ant-upload-hint\"\n    }, \" Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files \", -1 /* HOISTED */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"fileList\"]), _createCommentVNode(\" 上传成功后的图片显示区域 \"), $setup.imageUrl ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n    src: $setup.imageUrl,\n    alt: \"Uploaded Image\",\n    class: \"uploaded-image\"\n  }, null, 8 /* PROPS */, _hoisted_4)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", _hoisted_5, _toDisplayString($setup.uploadStatus), 1 /* TEXT */)]), _createVNode(_component_a_drawer, {\n    title: \"提取结果\",\n    placement: _ctx.top,\n    closable: false,\n    open: $setup.open,\n    onClose: $setup.onClose\n  }, {\n    default: _withCtx(() => _cache[3] || (_cache[3] = [_createElementVNode(\"p\", null, \"Some contents...\", -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Some contents...\", -1 /* HOISTED */), _createElementVNode(\"p\", null, \"Some contents...\", -1 /* HOISTED */)])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"placement\", \"open\"]), _createElementVNode(\"p\", _hoisted_6, _toDisplayString($setup.uploadStatus), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","key","id","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createCommentVNode","_createVNode","_component_a_upload_dragger","fileList","$setup","_cache","$event","name","action","multiple","onChange","handleChange","onDrop","handleDrop","default","_withCtx","_hoisted_2","_","imageUrl","_hoisted_3","src","alt","_hoisted_4","_hoisted_5","_toDisplayString","uploadStatus","_component_a_drawer","title","placement","_ctx","top","closable","open","onClose","_hoisted_6"],"sources":["E:\\permisson\\demo\\src\\views\\ocr\\ocr.vue"],"sourcesContent":["<template>\r\n<div class=\"uip\">\r\n    <!-- 文件上传框 -->\r\n    <a-upload-dragger\r\n      v-model:fileList=\"fileList\"\r\n      name=\"file\"\r\n      action=\"/files\"\r\n      :multiple=\"true\"\r\n      @change=\"handleChange\"\r\n      @drop=\"handleDrop\"\r\n    >\r\n      <p class=\"ant-upload-drag-icon\">\r\n        <InboxOutlined></InboxOutlined>\r\n      </p>\r\n      <p class=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n      <p class=\"ant-upload-hint\">\r\n        Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n        band files\r\n      </p>\r\n    </a-upload-dragger>\r\n\r\n    <!-- 上传成功后的图片显示区域 -->\r\n    <div v-if=\"imageUrl\" class=\"image-container\">\r\n      <img :src=\"imageUrl\" alt=\"Uploaded Image\" class=\"uploaded-image\" />\r\n    </div>\r\n\r\n    <p id=\"status\">{{ uploadStatus }}</p>\r\n  </div>\r\n    <a-drawer\r\n    title=\"提取结果\"\r\n    :placement=\"top\"\r\n    :closable=\"false\"\r\n    :open=\"open\"\r\n    @close=\"onClose\"\r\n  >\r\n    <p>Some contents...</p>\r\n    <p>Some contents...</p>\r\n    <p>Some contents...</p>\r\n  </a-drawer>\r\n    <p id=\"status\">{{ uploadStatus }}</p>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { message } from 'ant-design-vue';\r\nimport { InboxOutlined } from '@ant-design/icons-vue';\r\nimport { createDirectus, rest, uploadFiles,readFiles } from '@directus/sdk';\r\nimport { $getfile } from '@/api/file';\r\nconst imageUrl = ref(''); \r\nconst id = ref('');\r\n// 1️⃣ 创建 Directus 客户端\r\nconst client = createDirectus('http://localhost:8055').with(rest());\r\nconst open = ref(false);\r\nconst showDrawer = () => {\r\n  open.value = true;\r\n};\r\nconst onClose = () => {\r\n  open.value = false;\r\n};\r\n// 2️⃣ 初始化文件列表和上传状态\r\nconst fileList = ref([]);\r\nlet uploadStatus = ref('');\r\n\r\n// 3️⃣ 文件上传成功/失败时的处理\r\nconst handleChange = (info) => {\r\n  const status = info.file.status;\r\n  if (status !== 'uploading') {\r\n    console.log(info.file, info.fileList);\r\n  }\r\n  if (status === 'done') {\r\n    message.success(`${info.file.name} 成功上传.`);\r\n  } else if (status === 'error') {\r\n    message.error(`${info.file.name} 上传失败.`);\r\n  }\r\n};\r\nlet imglist=[]\r\n// 4️⃣ 处理文件拖拽事件\r\nfunction handleDrop(e) {\r\n  // 获取拖拽的文件\r\n  const files = e.dataTransfer.files;\r\n  if (files.length > 0) {\r\n    // 使用 FormData 来构建上传的文件数据\r\n    const formData = new FormData();\r\n    for (let file of files) {\r\n      formData.append('file', file);\r\n    }\r\n    // console.log(formData);\r\n\r\n    // 确保 imageUrl 是 Vue 响应式的 ref 类型\r\n// let imginfo=async()=>{\r\n//   const result = await client.request(readFiles('*'));\r\n//   imglist=result\r\n//   console.log(result);\r\n// }\r\n// imginfo()\r\n// 上传文件处理逻辑\r\n client.request(uploadFiles(formData))\r\n  .then((response) => {\r\n    console.log('Response:', response);  // 检查 response 数据结构\r\n        const imageUrlPath = `http://localhost:8055/assets/${response.id}`;\r\n        const imid=response.id\r\n        // 使用 .value 来赋值，因为 imageUrl 是一个 ref 类型\r\n        imageUrl.value = imageUrlPath;\r\n        id.value=imid\r\n  })\r\n  .catch((error) => {\r\n    // 上传失败处理\r\n    uploadStatus.value = 'Upload failed!';\r\n    message.error('File upload failed!');\r\n    console.error(error);\r\n  });\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.uip {\r\n  height: 200px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.image-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n.uploaded-image {\r\n  width: 200px;\r\n  max-height: 200px;\r\n  border-radius: 10px;\r\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\r\n}\r\n</style>\r\n"],"mappings":";;EACKA,KAAK,EAAC;AAAK;;EAUPA,KAAK,EAAC;AAAsB;;EAXrCC,GAAA;EAsByBD,KAAK,EAAC;;mBAtB/B;;EA0BOE,EAAE,EAAC;AAAQ;;EAaXA,EAAE,EAAC;AAAQ;;;;uBAvClBC,mBAAA,CAAAC,SAAA,SACAC,mBAAA,CA0BQ,OA1BRC,UA0BQ,GAzBJC,mBAAA,WAAc,EACdC,YAAA,CAgBmBC,2BAAA;IAfTC,QAAQ,EAAEC,MAAA,CAAAD,QAAQ;IAJhC,qBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIwBF,MAAA,CAAAD,QAAQ,GAAAG,MAAA;IAC1BC,IAAI,EAAC,MAAM;IACXC,MAAM,EAAC,QAAQ;IACdC,QAAQ,EAAE,IAAI;IACdC,QAAM,EAAEN,MAAA,CAAAO,YAAY;IACpBC,MAAI,EAAER,MAAA,CAAAS;;IATbC,OAAA,EAAAC,QAAA,CAWM,MAEI,CAFJjB,mBAAA,CAEI,KAFJkB,UAEI,GADFf,YAAA,CAA+BG,MAAA,mB,6BAEjCN,mBAAA,CAAwE;MAArEL,KAAK,EAAC;IAAiB,GAAC,2CAAyC,sB,0BACpEK,mBAAA,CAGI;MAHDL,KAAK,EAAC;IAAiB,GAAC,0GAG3B,qB;IAlBNwB,CAAA;mCAqBIjB,mBAAA,kBAAqB,EACVI,MAAA,CAAAc,QAAQ,I,cAAnBtB,mBAAA,CAEM,OAFNuB,UAEM,GADJrB,mBAAA,CAAmE;IAA7DsB,GAAG,EAAEhB,MAAA,CAAAc,QAAQ;IAAEG,GAAG,EAAC,gBAAgB;IAAC5B,KAAK,EAAC;0BAvBtD6B,UAAA,E,KAAAtB,mBAAA,gBA0BIF,mBAAA,CAAqC,KAArCyB,UAAqC,EAAAC,gBAAA,CAAnBpB,MAAA,CAAAqB,YAAY,iB,GAE9BxB,YAAA,CAUSyB,mBAAA;IATTC,KAAK,EAAC,MAAM;IACXC,SAAS,EAAEC,IAAA,CAAAC,GAAG;IACdC,QAAQ,EAAE,KAAK;IACfC,IAAI,EAAE5B,MAAA,CAAA4B,IAAI;IACVC,OAAK,EAAE7B,MAAA,CAAA6B;;IAjCZnB,OAAA,EAAAC,QAAA,CAmCI,MAAuBV,MAAA,QAAAA,MAAA,OAAvBP,mBAAA,CAAuB,WAApB,kBAAgB,qBACnBA,mBAAA,CAAuB,WAApB,kBAAgB,qBACnBA,mBAAA,CAAuB,WAApB,kBAAgB,oB;IArCvBmB,CAAA;4CAuCInB,mBAAA,CAAqC,KAArCoC,UAAqC,EAAAV,gBAAA,CAAnBpB,MAAA,CAAAqB,YAAY,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}