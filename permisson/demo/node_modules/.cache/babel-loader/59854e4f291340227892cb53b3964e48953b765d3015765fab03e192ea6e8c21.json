{"ast":null,"code":"import \"core-js/modules/es.array.with.js\";\nimport { createDirectus, rest, readSingleton, createItem, deleteItem, readItem } from '@directus/sdk';\nconst client = createDirectus('http://localhost:8055').with(rest());\nexport let $categorieslist = async () => {\n  let result = await client.request(readSingleton('categories'));\n  return result;\n};\nexport let $addProduct = async params => {\n  try {\n    let result = await client.request(createItem('products', params));\n    // 假设返回的 result 包含插入后的数据或成功标识\n    return result; // 返回数据以便进一步判断\n  } catch (error) {\n    console.error('产品添加失败:', error);\n    throw new Error(\"产品添加失败\");\n  }\n};\nexport let $addCate = async params => {\n  try {\n    await client.request(createItem('products_categories', params));\n    return true;\n  } catch (erro) {\n    console.error(`添加产品失败: ${error.message}`);\n    return false; // 删除失败，返回 false\n  }\n};\nexport let $delProduct = async params => {\n  try {\n    await client.request(deleteItem('products', params)); // 发送请求\n    return true; // 删除成功，返回 true\n  } catch (error) {\n    console.error(`删除产品失败: ${error.message}`);\n    return false; // 删除失败，返回 false\n  }\n};\nexport let $getProduct = async params => {\n  let result = await client.request(readItem('products', {\n    filter: {\n      id: {\n        _eq: params\n      }\n    },\n    fields: ['*', 'categories.categories_id.name']\n  })); // 发送请求\n  console.log(params);\n  return result;\n};","map":{"version":3,"names":["createDirectus","rest","readSingleton","createItem","deleteItem","readItem","client","with","$categorieslist","result","request","$addProduct","params","error","console","Error","$addCate","erro","message","$delProduct","$getProduct","filter","id","_eq","fields","log"],"sources":["E:/permisson/demo/src/api/proinfo.js"],"sourcesContent":["import { createDirectus, rest, readSingleton, createItem, deleteItem, readItem } from '@directus/sdk';\r\nconst client = createDirectus('http://localhost:8055').with(rest());\r\nexport let $categorieslist = async () => {\r\n    let result = await client.request(readSingleton('categories'));\r\n    return result\r\n}\r\nexport let $addProduct = async (params) => {\r\n    try {\r\n      let result = await client.request(createItem('products', params));\r\n      // 假设返回的 result 包含插入后的数据或成功标识\r\n      return result; // 返回数据以便进一步判断\r\n    } catch (error) {\r\n      console.error('产品添加失败:', error);\r\n      throw new Error(\"产品添加失败\");\r\n    }\r\n  }\r\n\r\nexport let $addCate = async (params) => {\r\n    try {\r\n        await client.request(\r\n            createItem('products_categories', params))\r\n        return true;\r\n    } catch (erro) {\r\n        console.error(`添加产品失败: ${error.message}`);\r\n        return false; // 删除失败，返回 false\r\n    }\r\n}\r\n\r\nexport let $delProduct = async (params) => {\r\n    try {\r\n        await client.request(deleteItem('products', params)); // 发送请求\r\n        return true; // 删除成功，返回 true\r\n    } catch (error) {\r\n        console.error(`删除产品失败: ${error.message}`);\r\n        return false; // 删除失败，返回 false\r\n    }\r\n};\r\n\r\nexport let $getProduct = async (params) => {\r\n\r\n    let result = await client.request(readItem('products', {\r\n        filter: {\r\n            id: {\r\n\t\t\t\t_eq: params,\r\n\t\t\t},\r\n        }, \r\n        fields: [\r\n          '*', \r\n          'categories.categories_id.name' \r\n        ]\r\n      })); // 发送请求\r\n    console.log(params);\r\n    \r\n    return result;\r\n};\r\n"],"mappings":";AAAA,SAASA,cAAc,EAAEC,IAAI,EAAEC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,eAAe;AACrG,MAAMC,MAAM,GAAGN,cAAc,CAAC,uBAAuB,CAAC,CAACO,IAAI,CAACN,IAAI,CAAC,CAAC,CAAC;AACnE,OAAO,IAAIO,eAAe,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAIC,MAAM,GAAG,MAAMH,MAAM,CAACI,OAAO,CAACR,aAAa,CAAC,YAAY,CAAC,CAAC;EAC9D,OAAOO,MAAM;AACjB,CAAC;AACD,OAAO,IAAIE,WAAW,GAAG,MAAOC,MAAM,IAAK;EACvC,IAAI;IACF,IAAIH,MAAM,GAAG,MAAMH,MAAM,CAACI,OAAO,CAACP,UAAU,CAAC,UAAU,EAAES,MAAM,CAAC,CAAC;IACjE;IACA,OAAOH,MAAM,CAAC,CAAC;EACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IAC/B,MAAM,IAAIE,KAAK,CAAC,QAAQ,CAAC;EAC3B;AACF,CAAC;AAEH,OAAO,IAAIC,QAAQ,GAAG,MAAOJ,MAAM,IAAK;EACpC,IAAI;IACA,MAAMN,MAAM,CAACI,OAAO,CAChBP,UAAU,CAAC,qBAAqB,EAAES,MAAM,CAAC,CAAC;IAC9C,OAAO,IAAI;EACf,CAAC,CAAC,OAAOK,IAAI,EAAE;IACXH,OAAO,CAACD,KAAK,CAAC,WAAWA,KAAK,CAACK,OAAO,EAAE,CAAC;IACzC,OAAO,KAAK,CAAC,CAAC;EAClB;AACJ,CAAC;AAED,OAAO,IAAIC,WAAW,GAAG,MAAOP,MAAM,IAAK;EACvC,IAAI;IACA,MAAMN,MAAM,CAACI,OAAO,CAACN,UAAU,CAAC,UAAU,EAAEQ,MAAM,CAAC,CAAC,CAAC,CAAC;IACtD,OAAO,IAAI,CAAC,CAAC;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,WAAWA,KAAK,CAACK,OAAO,EAAE,CAAC;IACzC,OAAO,KAAK,CAAC,CAAC;EAClB;AACJ,CAAC;AAED,OAAO,IAAIE,WAAW,GAAG,MAAOR,MAAM,IAAK;EAEvC,IAAIH,MAAM,GAAG,MAAMH,MAAM,CAACI,OAAO,CAACL,QAAQ,CAAC,UAAU,EAAE;IACnDgB,MAAM,EAAE;MACJC,EAAE,EAAE;QACZC,GAAG,EAAEX;MACN;IACK,CAAC;IACDY,MAAM,EAAE,CACN,GAAG,EACH,+BAA+B;EAEnC,CAAC,CAAC,CAAC,CAAC,CAAC;EACPV,OAAO,CAACW,GAAG,CAACb,MAAM,CAAC;EAEnB,OAAOH,MAAM;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}