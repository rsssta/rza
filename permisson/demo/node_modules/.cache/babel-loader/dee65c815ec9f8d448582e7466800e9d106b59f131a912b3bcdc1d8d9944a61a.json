{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache) {\n  const _component_a_input_search = _resolveComponent(\"a-input-search\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_popconfirm = _resolveComponent(\"a-popconfirm\");\n  const _component_a_table = _resolveComponent(\"a-table\");\n  const _component_addpro = _resolveComponent(\"addpro\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_a_input_search, {\n    class: \"searchText\",\n    value: _ctx.searchKeyword,\n    \"onUpdate:value\": _cache[0] || (_cache[0] = $event => _ctx.searchKeyword = $event),\n    placeholder: \"请输入产品名称\",\n    \"enter-button\": \"查询\",\n    size: \"default\",\n    onSearch: _ctx.onSearch\n  }, null, 8 /* PROPS */, [\"value\", \"onSearch\"]), _createVNode(_component_a_button, {\n    type: \"primary\",\n    class: \"add-a\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.showDrawer = true)\n  }, {\n    default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"添加\")])),\n    _: 1 /* STABLE */\n  })]), (_openBlock(), _createBlock(_component_a_table, {\n    key: _ctx.tableDatas.length,\n    dataSource: _ctx.tableDatas,\n    columns: _ctx.tableColumns\n  }, {\n    bodyCell: _withCtx(({\n      column,\n      text,\n      record\n    }) => [column.dataIndex === 'operation' ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createElementVNode(\"a\", {\n      onClick: $event => _ctx.onEdit(record.id),\n      class: \"edit\"\n    }, \"编辑\", 8 /* PROPS */, _hoisted_2), _createVNode(_component_a_popconfirm, {\n      title: \"确定删除吗?\",\n      okText: \"确定\",\n      cancelText: \"取消\",\n      onConfirm: $event => _ctx.onDelete(record.id)\n    }, {\n      default: _withCtx(() => _cache[5] || (_cache[5] = [_createElementVNode(\"a\", null, \"删除\", -1 /* HOISTED */)])),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onConfirm\"])], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"dataSource\", \"columns\"])), _createVNode(_component_addpro, {\n    id: _ctx.id,\n    showDrawer: _ctx.showDrawer,\n    \"onUpdate:showDrawer\": _cache[2] || (_cache[2] = $event => _ctx.showDrawer = $event),\n    onSyncDrawer: _cache[3] || (_cache[3] = $event => _ctx.showDrawer = $event)\n  }, null, 8 /* PROPS */, [\"id\", \"showDrawer\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createVNode","_component_a_input_search","value","_ctx","searchKeyword","_cache","$event","placeholder","size","onSearch","_component_a_button","type","onClick","showDrawer","default","_withCtx","_createTextVNode","_","_createBlock","_component_a_table","key","tableDatas","length","dataSource","columns","tableColumns","bodyCell","column","text","record","dataIndex","onEdit","id","_hoisted_2","_component_a_popconfirm","title","okText","cancelText","onConfirm","onDelete","_createCommentVNode","_component_addpro","onSyncDrawer"],"sources":["E:\\permisson\\demo\\src\\views\\products\\productsinfo.vue"],"sourcesContent":["<template>\r\n  <div class=\"search\">\r\n    <a-input-search class=\"searchText\" v-model:value=\"searchKeyword\" placeholder=\"请输入产品名称\" enter-button=\"查询\"\r\n      size=\"default\" @search=\"onSearch\" />\r\n    <a-button type=\"primary\" class=\"add-a\" @click=\"showDrawer=true\">添加</a-button>\r\n  </div>\r\n  <a-table :key=\"tableDatas.length\" :dataSource=\"tableDatas\" :columns=\"tableColumns\">\r\n    <template #bodyCell=\"{ column, text, record }\">\r\n      <template v-if=\"column.dataIndex === 'operation'\">\r\n        <a @click=\"onEdit(record.id)\" class=\"edit\">编辑</a>\r\n        <a-popconfirm title=\"确定删除吗?\" okText=\"确定\" cancelText=\"取消\" @confirm=\"onDelete(record.id)\">\r\n          <a>删除</a>\r\n        </a-popconfirm>\r\n      </template>\r\n    </template>\r\n  </a-table>\r\n  <addpro :id=\"id\" v-model:showDrawer=\"showDrawer\" @sync-drawer=\"showDrawer=$event\"></addpro>\r\n</template>\r\n\r\n<script setup>\r\n// import addProduct from '../../components/product/addProduct.vue'\r\nimport { reactive, toRefs, ref ,watch, provide} from 'vue';\r\nimport { createDirectus, rest, readItems } from '@directus/sdk';\r\nimport { message } from 'ant-design-vue';\r\nimport { $delProduct,$getProduct } from '../../api/proinfo.js'\r\nimport addpro from '../../components/product/addProduct.vue'\r\nconst searchKeyword = ref('');\r\nconst formRef = ref();\r\nlet id = ref(\"\");\r\n// 数据源\r\nlet dataSource = reactive({\r\n  tableDatas: [],  // 确保 dataSource.tableDatas 一开始是空数组\r\n  tableColumns: [\r\n    {\r\n      title: '产品id',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n    },\r\n    {\r\n      title: '产品名称',\r\n      dataIndex: 'name'\r\n    },\r\n    {\r\n      title: '价格',\r\n      dataIndex: 'price'\r\n    },\r\n    {\r\n      title: '类别',\r\n      dataIndex: 'categories',\r\n    },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation'\r\n    }\r\n  ],\r\n  formState: {\r\n    name: '',\r\n    price: '',\r\n    categories: {\r\n      create: [\r\n        { categories_id: '' }, // 关联类别的 ID // 如果有多个类别\r\n      ]\r\n    }\r\n  },\r\n  showDrawer:false \r\n});\r\n// 使用 `toRefs` 解构 `reactive` 数据，方便在模板中直接使用\r\nlet { tableDatas, tableColumns, formState, categoriesList,showDrawer } = toRefs(dataSource);\r\nlet onEdit = (val) => {\r\n  dataSource.showDrawer = true;\r\n  id = val;\r\n}\r\n  if (nval) {\r\n    try {\r\n      const product = await $getProduct(nval);\r\n      \r\n      // 打印获取的产品信息，检查是否正常\r\n      console.log('产品数据:', product);\r\n\r\n      // 确保在DOM更新后再进行赋值，避免视图更新的问题\r\n      await nextTick(() => {\r\n        dataSource.formState.name = product.name || '';\r\n        dataSource.formState.price = product.price || '';\r\n        dataSource.formState.categories = product.categories || '';\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error(\"获取产品信息失败:\", error);\r\n    }\r\n  }\r\n});\r\n// let onClear = () => {\r\n//   formRef.value.resetFields();\r\n// }\r\nlet onDelete = async (id) => {\r\n  try {\r\n    const success = await $delProduct(id); // 等待删除完成\r\n    if (success) {\r\n      message.success(\"产品删除成功\");\r\n      loadData(); // 重新加载数据\r\n    } else {\r\n      message.error(\"产品删除失败\");\r\n    }\r\n  } catch (error) {\r\n    message.error(\"删除产品时发生错误：\" + error.message);\r\n  }\r\n};\r\n\r\nconst client = createDirectus('http://localhost:8055').with(rest());\r\nlet loadData = async (searchKeyword = '') => {\r\n  try {\r\n    const filter = searchKeyword\r\n      ? {\r\n        filter: {\r\n          name: {\r\n            _contains: searchKeyword, // 直接查询包含关键字的产品\r\n          },\r\n        },\r\n      }\r\n      : {};\r\n\r\n    const result = await client.request(readItems('products', {\r\n      fields: [\r\n        '*,categories.categories_id.name'\r\n      ],\r\n      ...filter\r\n    }));\r\n    result.forEach(item => {\r\n      item.categories = item.categories.map(cat => cat.categories_id.name).join(', ');\r\n    });\r\n    tableDatas.value = result\r\n    console.log(tableDatas);\r\n\r\n  } catch (error) {\r\n    console.error('Failed to fetch items:', error);\r\n  }\r\n};\r\nloadData()\r\nlet onSearch = (value) => {\r\n  searchKeyword.value = value;\r\n  loadData(value);  // 传递搜索内容\r\n}\r\nprovide('loadData',loadData)\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.edit{\r\n  margin-right: 10px;\r\n}\r\n.search {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n\r\n  .searchText {\r\n    width: 300px;\r\n  }\r\n\r\n  .add-a {\r\n    background: red;\r\n    border: none;\r\n  }\r\n\r\n  .add {\r\n    background: #bacf65;\r\n    border: none;\r\n    color: white\r\n  }\r\n\r\n  .clear {\r\n    margin-left: 10px;\r\n  }\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAQ;mBADrB;;;;;;;uBAAAC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAIM,OAJNC,UAIM,GAHJC,YAAA,CACsCC,yBAAA;IADtBN,KAAK,EAAC,YAAY;IAASO,KAAK,EAAEC,IAAA,CAAAC,aAAa;IAFnE,kBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAEsDH,IAAA,CAAAC,aAAa,GAAAE,MAAA;IAAEC,WAAW,EAAC,SAAS;IAAC,cAAY,EAAC,IAAI;IACtGC,IAAI,EAAC,SAAS;IAAEC,QAAM,EAAEN,IAAA,CAAAM;kDAC1BT,YAAA,CAA6EU,mBAAA;IAAnEC,IAAI,EAAC,SAAS;IAAChB,KAAK,EAAC,OAAO;IAAEiB,OAAK,EAAAP,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEH,IAAA,CAAAU,UAAU;;IAJ7DC,OAAA,EAAAC,QAAA,CAIoE,MAAEV,MAAA,QAAAA,MAAA,OAJtEW,gBAAA,CAIoE,IAAE,E;IAJtEC,CAAA;uBAMEC,YAAA,CASUC,kBAAA;IATAC,GAAG,EAAEjB,IAAA,CAAAkB,UAAU,CAACC,MAAM;IAAGC,UAAU,EAAEpB,IAAA,CAAAkB,UAAU;IAAGG,OAAO,EAAErB,IAAA,CAAAsB;;IACxDC,QAAQ,EAAAX,QAAA,CACjB,CAKW;MANUY,MAAM;MAAEC,IAAI;MAAEC;IAAM,OACzBF,MAAM,CAACG,SAAS,oB,cAAhClC,mBAAA,CAKWC,SAAA;MAbjBuB,GAAA;IAAA,IASQtB,mBAAA,CAAiD;MAA7Cc,OAAK,EAAAN,MAAA,IAAEH,IAAA,CAAA4B,MAAM,CAACF,MAAM,CAACG,EAAE;MAAGrC,KAAK,EAAC;OAAO,IAAE,iBATrDsC,UAAA,GAUQjC,YAAA,CAEekC,uBAAA;MAFDC,KAAK,EAAC,QAAQ;MAACC,MAAM,EAAC,IAAI;MAACC,UAAU,EAAC,IAAI;MAAEC,SAAO,EAAAhC,MAAA,IAAEH,IAAA,CAAAoC,QAAQ,CAACV,MAAM,CAACG,EAAE;;MAV7FlB,OAAA,EAAAC,QAAA,CAWU,MAASV,MAAA,QAAAA,MAAA,OAATP,mBAAA,CAAS,WAAN,IAAE,oB;MAXfmB,CAAA;sFAAAuB,mBAAA,e;IAAAvB,CAAA;iDAgBEjB,YAAA,CAA2FyC,iBAAA;IAAlFT,EAAE,EAAE7B,IAAA,CAAA6B,EAAE;IAAUnB,UAAU,EAAEV,IAAA,CAAAU,UAAU;IAhBjD,uBAAAR,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgBuCH,IAAA,CAAAU,UAAU,GAAAP,MAAA;IAAGoC,YAAW,EAAArC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEH,IAAA,CAAAU,UAAU,GAACP,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}