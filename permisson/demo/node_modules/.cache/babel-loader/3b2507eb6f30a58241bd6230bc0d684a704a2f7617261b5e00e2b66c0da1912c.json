{"ast":null,"code":"import \"core-js/modules/es.array.with.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { reactive, toRefs, ref, provide } from 'vue';\nimport { createDirectus, rest, readItems } from '@directus/sdk';\nimport { message } from 'ant-design-vue';\nimport { $delProduct } from '../../api/proinfo.js';\nimport addpro from '../../components/product/addProduct.vue';\nexport default {\n  __name: 'productsinfo',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    // import addProduct from '../../components/product/addProduct.vue'\n    const searchKeyword = ref('');\n    const formRef = ref();\n    let id = ref(\"\");\n    // 数据源\n    let dataSource = reactive({\n      tableDatas: [],\n      // 确保 dataSource.tableDatas 一开始是空数组\n      tableColumns: [{\n        title: '产品id',\n        dataIndex: 'id',\n        key: 'id'\n      }, {\n        title: '产品名称',\n        dataIndex: 'name'\n      }, {\n        title: '价格',\n        dataIndex: 'price'\n      }, {\n        title: '类别',\n        dataIndex: 'categories'\n      }, {\n        title: '操作',\n        dataIndex: 'operation'\n      }],\n      formState: {\n        name: '',\n        price: '',\n        categories: {\n          create: [{\n            categories_id: ''\n          } // 关联类别的 ID // 如果有多个类别\n          ]\n        }\n      },\n      showDrawer: false\n    });\n    // 使用 `toRefs` 解构 `reactive` 数据，方便在模板中直接使用\n    let {\n      tableDatas,\n      tableColumns,\n      formState,\n      showDrawer\n    } = toRefs(dataSource);\n    // let onClear = () => {\n    //   formRef.value.resetFields();\n    // }\n    let onDelete = async id => {\n      try {\n        const success = await $delProduct(id); // 等待删除完成\n        if (success) {\n          message.success(\"产品删除成功\");\n          loadData(); // 重新加载数据\n        } else {\n          message.error(\"产品删除失败\");\n        }\n      } catch (error) {\n        message.error(\"删除产品时发生错误：\" + error.message);\n      }\n    };\n    let onEdit = val => {\n      dataSource.showDrawer = true;\n      id.value = val;\n    };\n    const client = createDirectus('http://localhost:8055').with(rest());\n    let loadData = async (searchKeyword = '') => {\n      try {\n        const filter = searchKeyword ? {\n          filter: {\n            name: {\n              _contains: searchKeyword // 直接查询包含关键字的产品\n            }\n          }\n        } : {};\n        const result = await client.request(readItems('products', {\n          fields: ['*,categories.categories_id.name'],\n          ...filter\n        }));\n        result.forEach(item => {\n          item.categories = item.categories.map(cat => cat.categories_id.name).join(', ');\n        });\n        tableDatas.value = result;\n        console.log(tableDatas);\n      } catch (error) {\n        console.error('Failed to fetch items:', error);\n      }\n    };\n    loadData();\n    let onSearch = value => {\n      searchKeyword.value = value;\n      loadData(value); // 传递搜索内容\n    };\n    provide('loadData', loadData);\n    provide('id', id);\n    const __returned__ = {\n      searchKeyword,\n      formRef,\n      get id() {\n        return id;\n      },\n      set id(v) {\n        id = v;\n      },\n      get dataSource() {\n        return dataSource;\n      },\n      set dataSource(v) {\n        dataSource = v;\n      },\n      get tableDatas() {\n        return tableDatas;\n      },\n      set tableDatas(v) {\n        tableDatas = v;\n      },\n      get tableColumns() {\n        return tableColumns;\n      },\n      set tableColumns(v) {\n        tableColumns = v;\n      },\n      get formState() {\n        return formState;\n      },\n      set formState(v) {\n        formState = v;\n      },\n      get showDrawer() {\n        return showDrawer;\n      },\n      set showDrawer(v) {\n        showDrawer = v;\n      },\n      get onDelete() {\n        return onDelete;\n      },\n      set onDelete(v) {\n        onDelete = v;\n      },\n      get onEdit() {\n        return onEdit;\n      },\n      set onEdit(v) {\n        onEdit = v;\n      },\n      client,\n      get loadData() {\n        return loadData;\n      },\n      set loadData(v) {\n        loadData = v;\n      },\n      get onSearch() {\n        return onSearch;\n      },\n      set onSearch(v) {\n        onSearch = v;\n      },\n      reactive,\n      toRefs,\n      ref,\n      provide,\n      get createDirectus() {\n        return createDirectus;\n      },\n      get rest() {\n        return rest;\n      },\n      get readItems() {\n        return readItems;\n      },\n      get message() {\n        return message;\n      },\n      get $delProduct() {\n        return $delProduct;\n      },\n      addpro\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","toRefs","ref","provide","createDirectus","rest","readItems","message","$delProduct","addpro","searchKeyword","formRef","id","dataSource","tableDatas","tableColumns","title","dataIndex","key","formState","name","price","categories","create","categories_id","showDrawer","onDelete","success","loadData","error","onEdit","val","value","client","with","filter","_contains","result","request","fields","forEach","item","map","cat","join","console","log","onSearch"],"sources":["E:/permisson/demo/src/views/products/productsinfo.vue"],"sourcesContent":["<template>\r\n  <div class=\"search\">\r\n    <a-input-search class=\"searchText\" v-model:value=\"searchKeyword\" placeholder=\"请输入产品名称\" enter-button=\"查询\"\r\n      size=\"default\" @search=\"onSearch\" />\r\n    <a-button type=\"primary\" class=\"add-a\" @click=\"showDrawer=true\">添加</a-button>\r\n  </div>\r\n  <a-table :key=\"tableDatas.length\" :dataSource=\"tableDatas\" :columns=\"tableColumns\">\r\n    <template #bodyCell=\"{ column, text, record }\">\r\n      <template v-if=\"column.dataIndex === 'operation'\">\r\n        <a @click=\"onEdit(record.id)\" class=\"edit\">编辑</a>\r\n        <a-popconfirm title=\"确定删除吗?\" okText=\"确定\" cancelText=\"取消\" @confirm=\"onDelete(record.id)\">\r\n          <a>删除</a>\r\n        </a-popconfirm>\r\n      </template>\r\n    </template>\r\n  </a-table>\r\n  <addpro v-model:id=\"id\" v-model:showDrawer=\"showDrawer\" @sync-drawer=\"showDrawer=$event\"></addpro>\r\n</template>\r\n\r\n<script setup>\r\n// import addProduct from '../../components/product/addProduct.vue'\r\nimport { reactive, toRefs, ref , provide} from 'vue';\r\nimport { createDirectus, rest, readItems } from '@directus/sdk';\r\nimport { message } from 'ant-design-vue';\r\nimport { $delProduct } from '../../api/proinfo.js'\r\nimport addpro from '../../components/product/addProduct.vue'\r\nconst searchKeyword = ref('');\r\nconst formRef = ref();\r\nlet id = ref(\"\");\r\n// 数据源\r\nlet dataSource = reactive({\r\n  tableDatas: [],  // 确保 dataSource.tableDatas 一开始是空数组\r\n  tableColumns: [\r\n    {\r\n      title: '产品id',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n    },\r\n    {\r\n      title: '产品名称',\r\n      dataIndex: 'name'\r\n    },\r\n    {\r\n      title: '价格',\r\n      dataIndex: 'price'\r\n    },\r\n    {\r\n      title: '类别',\r\n      dataIndex: 'categories',\r\n    },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation'\r\n    }\r\n  ],\r\n  formState: {\r\n    name: '',\r\n    price: '',\r\n    categories: {\r\n      create: [\r\n        { categories_id: '' }, // 关联类别的 ID // 如果有多个类别\r\n      ]\r\n    }\r\n  },\r\n  showDrawer:false \r\n});\r\n// 使用 `toRefs` 解构 `reactive` 数据，方便在模板中直接使用\r\nlet { tableDatas, tableColumns, formState,showDrawer } = toRefs(dataSource);\r\n// let onClear = () => {\r\n//   formRef.value.resetFields();\r\n// }\r\nlet onDelete = async (id) => {\r\n  try {\r\n    const success = await $delProduct(id); // 等待删除完成\r\n    if (success) {\r\n      message.success(\"产品删除成功\");\r\n      loadData(); // 重新加载数据\r\n    } else {\r\n      message.error(\"产品删除失败\");\r\n    }\r\n  } catch (error) {\r\n    message.error(\"删除产品时发生错误：\" + error.message);\r\n  }\r\n};\r\nlet onEdit=(val)=>{\r\n  dataSource.showDrawer=true\r\n  id.value=val\r\n}\r\nconst client = createDirectus('http://localhost:8055').with(rest());\r\nlet loadData = async (searchKeyword = '') => {\r\n  try {\r\n    const filter = searchKeyword\r\n      ? {\r\n        filter: {\r\n          name: {\r\n            _contains: searchKeyword, // 直接查询包含关键字的产品\r\n          },\r\n        },\r\n      }\r\n      : {};\r\n\r\n    const result = await client.request(readItems('products', {\r\n      fields: [\r\n        '*,categories.categories_id.name'\r\n      ],\r\n      ...filter\r\n    }));\r\n    result.forEach(item => {\r\n      item.categories = item.categories.map(cat => cat.categories_id.name).join(', ');\r\n    });\r\n    tableDatas.value = result\r\n    console.log(tableDatas);\r\n\r\n  } catch (error) {\r\n    console.error('Failed to fetch items:', error);\r\n  }\r\n};\r\nloadData()\r\nlet onSearch = (value) => {\r\n  searchKeyword.value = value;\r\n  loadData(value);  // 传递搜索内容\r\n}\r\nprovide('loadData',loadData)\r\nprovide('id',id)\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.edit{\r\n  margin-right: 10px;\r\n}\r\n.search {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n\r\n  .searchText {\r\n    width: 300px;\r\n  }\r\n\r\n  .add-a {\r\n    background: red;\r\n    border: none;\r\n  }\r\n\r\n  .add {\r\n    background: #bacf65;\r\n    border: none;\r\n    color: white\r\n  }\r\n\r\n  .clear {\r\n    margin-left: 10px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}