{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { reactive, ref, toRefs, inject, watch } from 'vue';\nimport { message } from 'ant-design-vue';\nimport { $categorieslist, $addProduct, $getProduct } from '../../api/proinfo.js';\nexport default {\n  __name: 'addProduct',\n  props: [\"showDrawer\", \"no\"],\n  emits: ['sync-drawer'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const formRef = ref();\n    let loadData = inject('loadData');\n    let id = inject('id');\n    let dataSource = reactive({\n      formState: {\n        name: '',\n        price: '',\n        categories: {\n          create: [{\n            categories_id: ''\n          } // 关联类别的 ID // 如果有多个类别\n          ]\n        }\n      },\n      categoriesList: []\n    });\n    console.log(__props.showDrawer);\n    let {\n      formState,\n      categoriesList\n    } = toRefs(dataSource);\n    let emit = __emit;\n    watch(() => id.value, async nval => {\n      if (nval) {\n        try {\n          const product = await $getProduct(nval);\n\n          // 打印获取的产品信息，检查是否正常\n          console.log('产品数据:', product);\n\n          // 确保在DOM更新后再进行赋值，避免视图更新的问题\n          await nextTick(() => {\n            dataSource.formState.name = product.name || '';\n            dataSource.formState.price = product.price || '';\n            dataSource.formState.categories = product.categories || '';\n          });\n        } catch (error) {\n          console.error(\"获取产品信息失败:\", error);\n        }\n      }\n    });\n    let afterOpenChange = val => {\n      console.log(val);\n      if (!val) {\n        emit('sync-drawer', val);\n      }\n    };\n    const closeDrawer = () => {\n      emit('sync-drawer', false);\n    };\n    let onFinish = () => {\n      const newProduct = {\n        name: dataSource.formState.name,\n        price: dataSource.formState.price,\n        categories: {\n          create: [{\n            categories_id: dataSource.formState.categories\n          } // 关联类别的 ID // 如果有多个类别\n          ]\n        }\n      };\n      $addProduct(newProduct).then(response => {\n        message.success(\"产品添加成功1\");\n        formRef.value.resetFields();\n        console.log(response);\n        loadData();\n      }).catch(error => {\n        message.error(\"产品添加失败1\");\n      });\n    };\n    let loadCate = () => {\n      $categorieslist().then(r => {\n        dataSource.categoriesList = r.map(item => ({\n          id: item.id,\n          name: item.name\n        }));\n        console.log(dataSource.categoriesList);\n      });\n    };\n    let onClear = () => {\n      formRef.value.resetFields();\n    };\n    loadCate();\n    const __returned__ = {\n      formRef,\n      get loadData() {\n        return loadData;\n      },\n      set loadData(v) {\n        loadData = v;\n      },\n      get id() {\n        return id;\n      },\n      set id(v) {\n        id = v;\n      },\n      get dataSource() {\n        return dataSource;\n      },\n      set dataSource(v) {\n        dataSource = v;\n      },\n      get formState() {\n        return formState;\n      },\n      set formState(v) {\n        formState = v;\n      },\n      get categoriesList() {\n        return categoriesList;\n      },\n      set categoriesList(v) {\n        categoriesList = v;\n      },\n      get emit() {\n        return emit;\n      },\n      set emit(v) {\n        emit = v;\n      },\n      get afterOpenChange() {\n        return afterOpenChange;\n      },\n      set afterOpenChange(v) {\n        afterOpenChange = v;\n      },\n      closeDrawer,\n      get onFinish() {\n        return onFinish;\n      },\n      set onFinish(v) {\n        onFinish = v;\n      },\n      get loadCate() {\n        return loadCate;\n      },\n      set loadCate(v) {\n        loadCate = v;\n      },\n      get onClear() {\n        return onClear;\n      },\n      set onClear(v) {\n        onClear = v;\n      },\n      reactive,\n      ref,\n      toRefs,\n      inject,\n      watch,\n      get message() {\n        return message;\n      },\n      get $categorieslist() {\n        return $categorieslist;\n      },\n      get $addProduct() {\n        return $addProduct;\n      },\n      get $getProduct() {\n        return $getProduct;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","ref","toRefs","inject","watch","message","$categorieslist","$addProduct","$getProduct","formRef","loadData","id","dataSource","formState","name","price","categories","create","categories_id","categoriesList","console","log","__props","showDrawer","emit","__emit","value","nval","product","nextTick","error","afterOpenChange","val","closeDrawer","onFinish","newProduct","then","response","success","resetFields","catch","loadCate","r","map","item","onClear"],"sources":["E:/permisson/demo/src/components/product/addProduct.vue"],"sourcesContent":["<template>\r\n  <a-drawer :open=\"showDrawer\" class=\"custom-class\" root-class-name=\"root-class-name\" :root-style=\"{ color: 'blue' }\"\r\n    style=\"color: red\" title=\"产品添加\" placement=\"right\" @after-open-change=\"afterOpenChange\" @close=\"closeDrawer\">\r\n    <a-form :model=\"formState\" v-bind=\"layout\" :validate-messages=\"validateMessages\" :wrapperCol=\"{ span: 16 }\"\r\n      :label-col=\"{ span: 6 }\" ref=\"formRef\" @finish=\"onFinish\">\r\n      <a-form-item name=\"name\" label=\"产品名称\" :rules=\"[{ required: true, message: '请输入产品名称！' }]\">\r\n        <a-input v-model:value=\"formState.name\" />\r\n      </a-form-item>\r\n      <a-form-item name=\"price\" label=\"价格\" :rules=\"[{ required: true, message: '请输入价格！' }]\">\r\n        <a-input v-model:value=\"formState.price\" />\r\n      </a-form-item>\r\n      <a-form-item name=\"categories\" label=\"类别\">\r\n        <a-radio-group v-model:value=\"formState.categories\" name=\"radioGroup\">\r\n          <a-radio v-for=\"(item, index) in categoriesList\" :key=\"index\" :value=\"item.id\">{{ item.name }}</a-radio>\r\n        </a-radio-group>\r\n      </a-form-item>\r\n      <a-form-item :wrapperCol=\"{ offset: 8, span: 16 }\">\r\n        <a-button class=\"add\" html-type=\"submit\">添加</a-button>\r\n        <a-button class=\"clear\" html-type=\"reset\" @click=\"onClear\">清空</a-button>\r\n      </a-form-item>\r\n    </a-form>\r\n  </a-drawer>\r\n</template>\r\n<script setup>\r\nimport { reactive,ref,toRefs,inject,watch} from 'vue';\r\nimport { message } from 'ant-design-vue';\r\nimport { $categorieslist, $addProduct,$getProduct } from '../../api/proinfo.js'\r\nconst formRef = ref();\r\nlet loadData=inject('loadData')\r\nlet id=inject('id')\r\nlet dataSource=reactive({\r\n formState:{\r\n   name:'',\r\n   price:'',\r\n   categories: {\r\n      create: [\r\n        { categories_id: '' }, // 关联类别的 ID // 如果有多个类别\r\n      ]\r\n    }\r\n },\r\n categoriesList: []\r\n})\r\nlet{showDrawer,no}=defineProps([\"showDrawer\",\"no\"])\r\nconsole.log(showDrawer);\r\nlet {  formState, categoriesList } = toRefs(dataSource);\r\nlet emit=defineEmits(['sync-drawer'])\r\nwatch(() => id.value, async (nval) => {\r\n  if (nval) {\r\n    try {\r\n      const product = await $getProduct(nval);\r\n      \r\n      // 打印获取的产品信息，检查是否正常\r\n      console.log('产品数据:', product);\r\n\r\n      // 确保在DOM更新后再进行赋值，避免视图更新的问题\r\n      await nextTick(() => {\r\n        dataSource.formState.name = product.name || '';\r\n        dataSource.formState.price = product.price || '';\r\n        dataSource.formState.categories = product.categories || '';\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error(\"获取产品信息失败:\", error);\r\n    }\r\n  }\r\n});\r\nlet afterOpenChange=(val)=>{\r\n console.log(val);\r\n \r\n if(!val){\r\n   emit('sync-drawer',val)\r\n }\r\n }\r\n const closeDrawer = () => {\r\n  emit('sync-drawer', false);\r\n};\r\nlet onFinish = () => {\r\n  const newProduct = {\r\n    name: dataSource.formState.name,\r\n    price: dataSource.formState.price,\r\n    categories: {\r\n      create: [\r\n        { categories_id: dataSource.formState.categories }, // 关联类别的 ID // 如果有多个类别\r\n      ]\r\n    }\r\n  };\r\n  $addProduct(newProduct)\r\n    .then(response => {\r\n      message.success(\"产品添加成功1\");\r\n      formRef.value.resetFields();\r\n      console.log(response);\r\n      loadData()\r\n    })\r\n    .catch(error => {\r\n      message.error(\"产品添加失败1\");\r\n    });\r\n  \r\n}\r\n\r\nlet loadCate = () => {\r\n  $categorieslist().then(r => {\r\n    dataSource.categoriesList = r.map(item => ({ id: item.id, name: item.name }));\r\n    console.log(dataSource.categoriesList);\r\n\r\n  })\r\n}\r\nlet onClear = () => {\r\n  formRef.value.resetFields();\r\n}\r\nloadCate()\r\n</script> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}