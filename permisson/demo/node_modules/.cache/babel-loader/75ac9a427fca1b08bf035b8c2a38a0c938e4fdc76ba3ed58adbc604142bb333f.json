{"ast":null,"code":"import \"core-js/modules/es.array.with.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { reactive, toRefs, ref } from 'vue';\nimport { createDirectus, rest, readItems } from '@directus/sdk';\nimport { message } from 'ant-design-vue';\nimport { $categorieslist } from '../../api/proinfo';\nexport default {\n  __name: 'productsinfo',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    // import addProduct from '../../components/product/addProduct.vue'\n    const searchKeyword = ref('');\n    const open = ref(false);\n    const afterOpenChange = bool => {\n      console.log('open', bool);\n    };\n    const showDrawer = () => {\n      open.value = true;\n    };\n    // 数据源\n    let dataSource = reactive({\n      tableDatas: [],\n      // 确保 dataSource.tableDatas 一开始是空数组\n      tableColumns: [{\n        title: '产品id',\n        dataIndex: 'id',\n        key: 'id'\n      }, {\n        title: '产品名称',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: '价格',\n        dataIndex: 'price',\n        key: 'price'\n      }, {\n        title: '类别',\n        dataIndex: 'sort',\n        key: 'sort'\n      }],\n      formState: {\n        name: '',\n        pricet: '',\n        categories: ''\n      },\n      categoriesList: []\n    });\n    // 使用 `toRefs` 解构 `reactive` 数据，方便在模板中直接使用\n    let {\n      tableDatas,\n      tableColumns,\n      formState,\n      categoriesList\n    } = toRefs(dataSource);\n    let onFinish = () => {};\n    const client = createDirectus('http://localhost:8055').with(rest());\n    let loadCate = () => {\n      $categorieslist().then(r => {\n        dataSource.categoriesList = r.map(item => item.name);\n      });\n    };\n    let loadData = async (searchKeyword = '') => {\n      try {\n        const filter = searchKeyword ? {\n          filter: {\n            name: {\n              _contains: searchKeyword // 直接查询包含关键字的产品\n            }\n          }\n        } : {};\n        const result = await client.request(readItems('products', {\n          fields: ['*'],\n          ...filter // 传入过滤条件\n        }));\n\n        // 将返回的数据赋值给 tableDatas\n        tableDatas.value = result;\n      } catch (error) {\n        console.error('Failed to fetch items:', error);\n      }\n    };\n    loadData();\n    loadCate();\n    let onSearch = value => {\n      searchKeyword.value = value;\n      loadData(value); // 传递搜索内容\n    };\n    const __returned__ = {\n      searchKeyword,\n      open,\n      afterOpenChange,\n      showDrawer,\n      get dataSource() {\n        return dataSource;\n      },\n      set dataSource(v) {\n        dataSource = v;\n      },\n      get tableDatas() {\n        return tableDatas;\n      },\n      set tableDatas(v) {\n        tableDatas = v;\n      },\n      get tableColumns() {\n        return tableColumns;\n      },\n      set tableColumns(v) {\n        tableColumns = v;\n      },\n      get formState() {\n        return formState;\n      },\n      set formState(v) {\n        formState = v;\n      },\n      get categoriesList() {\n        return categoriesList;\n      },\n      set categoriesList(v) {\n        categoriesList = v;\n      },\n      get onFinish() {\n        return onFinish;\n      },\n      set onFinish(v) {\n        onFinish = v;\n      },\n      client,\n      get loadCate() {\n        return loadCate;\n      },\n      set loadCate(v) {\n        loadCate = v;\n      },\n      get loadData() {\n        return loadData;\n      },\n      set loadData(v) {\n        loadData = v;\n      },\n      get onSearch() {\n        return onSearch;\n      },\n      set onSearch(v) {\n        onSearch = v;\n      },\n      reactive,\n      toRefs,\n      ref,\n      get createDirectus() {\n        return createDirectus;\n      },\n      get rest() {\n        return rest;\n      },\n      get readItems() {\n        return readItems;\n      },\n      get message() {\n        return message;\n      },\n      get $categorieslist() {\n        return $categorieslist;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","toRefs","ref","createDirectus","rest","readItems","message","$categorieslist","searchKeyword","open","afterOpenChange","bool","console","log","showDrawer","value","dataSource","tableDatas","tableColumns","title","dataIndex","key","formState","name","pricet","categories","categoriesList","onFinish","client","with","loadCate","then","r","map","item","loadData","filter","_contains","result","request","fields","error","onSearch"],"sources":["E:/permisson/demo/src/views/products/productsinfo.vue"],"sourcesContent":["<template>\r\n  <div class=\"search\">\r\n    <a-input-search\r\n    class=\"searchText\"\r\n      v-model:value=\"searchKeyword\"\r\n      placeholder=\"请输入产品名称\"\r\n      enter-button=\"查询\"\r\n      size=\"default\"\r\n      @search=\"onSearch\"\r\n    />\r\n    <a-button type=\"primary\" class=\"add\" @click=\"showDrawer\">添加</a-button>\r\n  </div>\r\n  <a-table :dataSource=\"tableDatas\" :columns=\"tableColumns\" />\r\n  <a-drawer\r\n    v-model:open=\"open\"\r\n    class=\"custom-class\"\r\n    root-class-name=\"root-class-name\"\r\n    :root-style=\"{ color: 'blue' }\"\r\n    style=\"color: red\"\r\n    title=\"Basic Drawer\"\r\n    placement=\"right\"\r\n    @after-open-change=\"afterOpenChange\"\r\n  >\r\n  <a-form\r\n    :model=\"formState\"\r\n    v-bind=\"layout\"\r\n    :validate-messages=\"validateMessages\"\r\n    :wrapperCol=\"{span:16}\"\r\n    :label-col=\"{span:6}\"\r\n    @finish=\"onFinish\"\r\n  >\r\n    <a-form-item name=\"productName\" label=\"产品名称\" :rules=\"[{ required: true,message:'请输入产品名称！'}]\">\r\n      <a-input v-model:value=\"formState.name\" />\r\n    </a-form-item>\r\n    <a-form-item name=\"price\" label=\"价格\" :rules=\"[{ required: true,message:'请输入价格！'}]\">\r\n      <a-input v-model:value=\"formState.price\" />\r\n    </a-form-item>\r\n    <a-form-item name=\"categories\" label=\"类别\" >\r\n      <a-input v-model:value=\"formState.categories\" />\r\n      {{ categoriesList }}\r\n    </a-form-item>\r\n    <a-form-item :wrapperCol=\"{offset:8,span:16}\">\r\n      <a-button type=\"primary\" html-type=\"submit\">添加</a-button>\r\n      <a-button type=\"primary\" html-type=\"reset\">清空</a-button>\r\n    </a-form-item>\r\n  </a-form>\r\n  </a-drawer>\r\n</template>\r\n\r\n<script setup>\r\n// import addProduct from '../../components/product/addProduct.vue'\r\nimport { reactive, toRefs, ref } from 'vue';\r\nimport { createDirectus, rest, readItems } from '@directus/sdk';\r\nimport { message } from 'ant-design-vue';\r\nimport {$categorieslist} from '../../api/proinfo'\r\nconst searchKeyword = ref('');\r\nconst open = ref(false);\r\nconst afterOpenChange = bool => {\r\n  console.log('open', bool);\r\n};\r\nconst showDrawer = () => {\r\n  open.value = true;\r\n};\r\n// 数据源\r\nlet dataSource = reactive({\r\n  tableDatas: [],  // 确保 dataSource.tableDatas 一开始是空数组\r\n  tableColumns: [\r\n      {\r\n          title: '产品id',\r\n          dataIndex: 'id',\r\n          key: 'id',\r\n      },\r\n      {\r\n          title: '产品名称',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n      },\r\n      {\r\n          title: '价格',\r\n          dataIndex: 'price',\r\n          key: 'price',\r\n      },\r\n      {\r\n          title: '类别',\r\n          dataIndex: 'sort',\r\n          key: 'sort',\r\n      }\r\n  ],\r\n  formState:{\r\n    name:'',\r\n    pricet:'',\r\n    categories:''\r\n  },\r\n  categoriesList:[]\r\n});\r\n// 使用 `toRefs` 解构 `reactive` 数据，方便在模板中直接使用\r\nlet { tableDatas, tableColumns,formState,categoriesList} = toRefs(dataSource);\r\nlet onFinish=()=>{\r\n  \r\n}\r\n\r\nconst client = createDirectus('http://localhost:8055').with(rest());\r\nlet loadCate=()=>{\r\n  $categorieslist().then(r=>{\r\n    dataSource.categoriesList = r.map(item => item.name);\r\n  })\r\n}\r\nlet loadData=async(searchKeyword='')=>{\r\ntry {\r\n  const filter = searchKeyword\r\n      ? {\r\n          filter: {\r\n            name: {\r\n              _contains: searchKeyword, // 直接查询包含关键字的产品\r\n            },\r\n          },\r\n        }\r\n      : {};\r\n\r\n    const result = await client.request(readItems('products', {\r\n      fields: ['*'],\r\n      ...filter, // 传入过滤条件\r\n    }));\r\n\r\n  // 将返回的数据赋值给 tableDatas\r\n  tableDatas.value = result\r\n} catch (error) {\r\n  console.error('Failed to fetch items:', error);\r\n}\r\n};\r\nloadData()\r\nloadCate()\r\nlet onSearch=(value)=>{\r\n  searchKeyword.value = value;\r\n  loadData(value);  // 传递搜索内容\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.search{\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  .searchText{\r\n    width: 300px;\r\n  }\r\n  .add{\r\n    background: red;\r\n    border: none;\r\n  }\r\n}\r\n</style>"],"mappings":";;;AAmDA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,GAAG,QAAQ,KAAK;AAC3C,SAASC,cAAc,EAAEC,IAAI,EAAEC,SAAS,QAAQ,eAAe;AAC/D,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAAQC,eAAe,QAAO,mBAAmB;;;;;;;;IAJjD;IAKA,MAAMC,aAAa,GAAGN,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMO,IAAI,GAAGP,GAAG,CAAC,KAAK,CAAC;IACvB,MAAMQ,eAAe,GAAGC,IAAI,IAAI;MAC9BC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAAC;IAC3B,CAAC;IACD,MAAMG,UAAU,GAAGA,CAAA,KAAM;MACvBL,IAAI,CAACM,KAAK,GAAG,IAAI;IACnB,CAAC;IACD;IACA,IAAIC,UAAU,GAAGhB,QAAQ,CAAC;MACxBiB,UAAU,EAAE,EAAE;MAAG;MACjBC,YAAY,EAAE,CACV;QACIC,KAAK,EAAE,MAAM;QACbC,SAAS,EAAE,IAAI;QACfC,GAAG,EAAE;MACT,CAAC,EACD;QACIF,KAAK,EAAE,MAAM;QACbC,SAAS,EAAE,MAAM;QACjBC,GAAG,EAAE;MACT,CAAC,EACD;QACIF,KAAK,EAAE,IAAI;QACXC,SAAS,EAAE,OAAO;QAClBC,GAAG,EAAE;MACT,CAAC,EACD;QACIF,KAAK,EAAE,IAAI;QACXC,SAAS,EAAE,MAAM;QACjBC,GAAG,EAAE;MACT,CAAC,CACJ;MACDC,SAAS,EAAC;QACRC,IAAI,EAAC,EAAE;QACPC,MAAM,EAAC,EAAE;QACTC,UAAU,EAAC;MACb,CAAC;MACDC,cAAc,EAAC;IACjB,CAAC,CAAC;IACF;IACA,IAAI;MAAET,UAAU;MAAEC,YAAY;MAACI,SAAS;MAACI;IAAc,CAAC,GAAGzB,MAAM,CAACe,UAAU,CAAC;IAC7E,IAAIW,QAAQ,GAACA,CAAA,KAAI,CAEjB,CAAC;IAED,MAAMC,MAAM,GAAGzB,cAAc,CAAC,uBAAuB,CAAC,CAAC0B,IAAI,CAACzB,IAAI,CAAC,CAAC,CAAC;IACnE,IAAI0B,QAAQ,GAACA,CAAA,KAAI;MACfvB,eAAe,CAAC,CAAC,CAACwB,IAAI,CAACC,CAAC,IAAE;QACxBhB,UAAU,CAACU,cAAc,GAAGM,CAAC,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACX,IAAI,CAAC;MACtD,CAAC,CAAC;IACJ,CAAC;IACD,IAAIY,QAAQ,GAAC,MAAAA,CAAM3B,aAAa,GAAC,EAAE,KAAG;MACtC,IAAI;QACF,MAAM4B,MAAM,GAAG5B,aAAa,GACtB;UACE4B,MAAM,EAAE;YACNb,IAAI,EAAE;cACJc,SAAS,EAAE7B,aAAa,CAAE;YAC5B;UACF;QACF,CAAC,GACD,CAAC,CAAC;QAEN,MAAM8B,MAAM,GAAG,MAAMV,MAAM,CAACW,OAAO,CAAClC,SAAS,CAAC,UAAU,EAAE;UACxDmC,MAAM,EAAE,CAAC,GAAG,CAAC;UACb,GAAGJ,MAAM,CAAE;QACb,CAAC,CAAC,CAAC;;QAEL;QACAnB,UAAU,CAACF,KAAK,GAAGuB,MAAM;MAC3B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACd7B,OAAO,CAAC6B,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACA,CAAC;IACDN,QAAQ,CAAC,CAAC;IACVL,QAAQ,CAAC,CAAC;IACV,IAAIY,QAAQ,GAAE3B,KAAK,IAAG;MACpBP,aAAa,CAACO,KAAK,GAAGA,KAAK;MAC3BoB,QAAQ,CAACpB,KAAK,CAAC,CAAC,CAAE;IACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}