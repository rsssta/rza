{"ast":null,"code":"import \"core-js/modules/es.array.with.js\";\nimport { MenuFoldOutlined, MenuUnfoldOutlined, UploadOutlined, UserOutlined, VideoCameraOutlined } from '@ant-design/icons-vue';\nimport { ref, onMounted } from 'vue';\nimport { createDirectus, rest, readItems } from '@directus/sdk';\nexport default {\n  __name: 'Layout',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const client = createDirectus('http://localhost:8055').with(rest());\n\n    // 定义需要的数据和状态\n    const selectedKeys = ref(['1']);\n    const collapsed = ref(false);\n    const items = ref([]);\n\n    // 在组件挂载时调用获取数据的函数\n    onMounted(async () => {\n      await fetchItems();\n    });\n\n    // 获取数据的方法\n    async function fetchItems() {\n      try {\n        const result = await client.request(readItems('products', {\n          fields: ['*'] // 获取所有字段\n        }));\n        console.log(result);\n        items.value = result.data;\n      } catch (error) {\n        console.error('Failed to fetch items:', error);\n      }\n    }\n    const __returned__ = {\n      client,\n      selectedKeys,\n      collapsed,\n      items,\n      fetchItems,\n      get MenuFoldOutlined() {\n        return MenuFoldOutlined;\n      },\n      get MenuUnfoldOutlined() {\n        return MenuUnfoldOutlined;\n      },\n      get UploadOutlined() {\n        return UploadOutlined;\n      },\n      get UserOutlined() {\n        return UserOutlined;\n      },\n      get VideoCameraOutlined() {\n        return VideoCameraOutlined;\n      },\n      ref,\n      onMounted,\n      get createDirectus() {\n        return createDirectus;\n      },\n      get rest() {\n        return rest;\n      },\n      get readItems() {\n        return readItems;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["MenuFoldOutlined","MenuUnfoldOutlined","UploadOutlined","UserOutlined","VideoCameraOutlined","ref","onMounted","createDirectus","rest","readItems","client","with","selectedKeys","collapsed","items","fetchItems","result","request","fields","console","log","value","data","error"],"sources":["E:/permisson/demo/src/views/Layout.vue"],"sourcesContent":["<!-- <template>\r\n    <div>\r\n      <ul>\r\n        <li v-for=\"item in items\" :key=\"item.id\">\r\n          {{ item.name }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n</template> -->\r\n<template>\r\n  <a-layout class=\"layout\">\r\n    <!-- 左侧 -->\r\n    <a-layout-sider v-model:collapsed=\"collapsed\" :trigger=\"null\" collapsible>\r\n      <div class=\"logo\" />\r\n      <a-menu v-model:selectedKeys=\"selectedKeys\" theme=\"dark\" mode=\"inline\">\r\n        <a-menu-item key=\"1\">\r\n          <user-outlined />\r\n          <span>nav 1</span>\r\n        </a-menu-item>\r\n        <a-menu-item key=\"2\">\r\n          <video-camera-outlined />\r\n          <span>nav 2</span>\r\n        </a-menu-item>\r\n        <a-menu-item key=\"3\">\r\n          <upload-outlined />\r\n          <span>nav 3</span>\r\n        </a-menu-item>\r\n      </a-menu>\r\n    </a-layout-sider>\r\n    <!-- 右侧 -->\r\n    <a-layout>\r\n      <!-- 顶部 -->\r\n      <a-layout-header style=\"background: #fff; padding: 0\">\r\n        <menu-unfold-outlined\r\n          v-if=\"collapsed\"\r\n          class=\"trigger\"\r\n          @click=\"() => (collapsed = !collapsed)\"\r\n        />\r\n        <menu-fold-outlined v-else class=\"trigger\" @click=\"() => (collapsed = !collapsed)\" />\r\n      </a-layout-header>\r\n      <a-layout-content\r\n        :style=\"{ margin: '24px 16px', padding: '24px', background: '#fff', minHeight: '280px' }\"\r\n      >\r\n        Content\r\n      </a-layout-content>\r\n    </a-layout>\r\n  </a-layout>\r\n</template>\r\n<script setup>\r\nimport {\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n  UploadOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n} from '@ant-design/icons-vue';\r\nimport { ref, onMounted } from 'vue';\r\nimport { createDirectus, rest, readItems } from '@directus/sdk';\r\n\r\nconst client = createDirectus('http://localhost:8055').with(rest());\r\n\r\n// 定义需要的数据和状态\r\nconst selectedKeys = ref(['1']);\r\nconst collapsed = ref(false);\r\nconst items = ref([]);\r\n\r\n// 在组件挂载时调用获取数据的函数\r\nonMounted(async () => {\r\n  await fetchItems();\r\n});\r\n\r\n// 获取数据的方法\r\nasync function fetchItems() {\r\n  try {\r\n    const result = await client.request(readItems('products', {\r\n      fields: ['*'],  // 获取所有字段\r\n    }));\r\n    console.log(result);\r\n    items.value = result.data;\r\n  } catch (error) {\r\n    console.error('Failed to fetch items:', error);\r\n  }\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.layout{\r\n  width: 100vw;\r\n  height: 100vh;\r\n}\r\n.logo{\r\n  height: 32px;\r\n  background: rgba(255, 255, 255, 0.3);\r\n  margin: 16px;\r\n}\r\n.trigger{\r\n  font-size: 18px;\r\n  line-height: 64px;\r\n  padding: 0 24px;\r\n  cursor: pointer;\r\n  transition: color 0.3s;\r\n  &:hover{\r\n    color: #1890ff;\r\n  }\r\n}\r\n</style>"],"mappings":";AAiDA,SACEA,gBAAgB,EAChBC,kBAAkB,EAClBC,cAAc,EACdC,YAAY,EACZC,mBAAmB,QACd,uBAAuB;AAC9B,SAASC,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,cAAc,EAAEC,IAAI,EAAEC,SAAS,QAAQ,eAAe;;;;;;;IAE/D,MAAMC,MAAM,GAAGH,cAAc,CAAC,uBAAuB,CAAC,CAACI,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC;;IAEnE;IACA,MAAMI,YAAY,GAAGP,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC/B,MAAMQ,SAAS,GAAGR,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMS,KAAK,GAAGT,GAAG,CAAC,EAAE,CAAC;;IAErB;IACAC,SAAS,CAAC,YAAY;MACpB,MAAMS,UAAU,CAAC,CAAC;IACpB,CAAC,CAAC;;IAEF;IACA,eAAeA,UAAUA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMN,MAAM,CAACO,OAAO,CAACR,SAAS,CAAC,UAAU,EAAE;UACxDS,MAAM,EAAE,CAAC,GAAG,CAAC,CAAG;QAClB,CAAC,CAAC,CAAC;QACHC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;QACnBF,KAAK,CAACO,KAAK,GAAGL,MAAM,CAACM,IAAI;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}